#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace schools_system
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="check")]
	public partial class schoolsDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertActivity(Activity instance);
    partial void UpdateActivity(Activity instance);
    partial void DeleteActivity(Activity instance);
    partial void InsertAdministrator(Administrator instance);
    partial void UpdateAdministrator(Administrator instance);
    partial void DeleteAdministrator(Administrator instance);
    partial void InsertAdministrators_Assign_Activity(Administrators_Assign_Activity instance);
    partial void UpdateAdministrators_Assign_Activity(Administrators_Assign_Activity instance);
    partial void DeleteAdministrators_Assign_Activity(Administrators_Assign_Activity instance);
    partial void InsertAnnouncement(Announcement instance);
    partial void UpdateAnnouncement(Announcement instance);
    partial void DeleteAnnouncement(Announcement instance);
    partial void InsertAssignment(Assignment instance);
    partial void UpdateAssignment(Assignment instance);
    partial void DeleteAssignment(Assignment instance);
    partial void InsertChildren(Children instance);
    partial void UpdateChildren(Children instance);
    partial void DeleteChildren(Children instance);
    partial void InsertClub(Club instance);
    partial void UpdateClub(Club instance);
    partial void DeleteClub(Club instance);
    partial void InsertCourse(Course instance);
    partial void UpdateCourse(Course instance);
    partial void DeleteCourse(Course instance);
    partial void InsertCourses_Prerequisite(Courses_Prerequisite instance);
    partial void UpdateCourses_Prerequisite(Courses_Prerequisite instance);
    partial void DeleteCourses_Prerequisite(Courses_Prerequisite instance);
    partial void InsertElementary(Elementary instance);
    partial void UpdateElementary(Elementary instance);
    partial void DeleteElementary(Elementary instance);
    partial void InsertElementaries_Supplies_List(Elementaries_Supplies_List instance);
    partial void UpdateElementaries_Supplies_List(Elementaries_Supplies_List instance);
    partial void DeleteElementaries_Supplies_List(Elementaries_Supplies_List instance);
    partial void InsertEmployee(Employee instance);
    partial void UpdateEmployee(Employee instance);
    partial void DeleteEmployee(Employee instance);
    partial void InsertHigh(High instance);
    partial void UpdateHigh(High instance);
    partial void DeleteHigh(High instance);
    partial void InsertMiddle(Middle instance);
    partial void UpdateMiddle(Middle instance);
    partial void DeleteMiddle(Middle instance);
    partial void InsertParent(Parent instance);
    partial void UpdateParent(Parent instance);
    partial void DeleteParent(Parent instance);
    partial void InsertParents_ApplyForChildIn_School(Parents_ApplyForChildIn_School instance);
    partial void UpdateParents_ApplyForChildIn_School(Parents_ApplyForChildIn_School instance);
    partial void DeleteParents_ApplyForChildIn_School(Parents_ApplyForChildIn_School instance);
    partial void InsertParents_Mobile(Parents_Mobile instance);
    partial void UpdateParents_Mobile(Parents_Mobile instance);
    partial void DeleteParents_Mobile(Parents_Mobile instance);
    partial void InsertParents_Review_School(Parents_Review_School instance);
    partial void UpdateParents_Review_School(Parents_Review_School instance);
    partial void DeleteParents_Review_School(Parents_Review_School instance);
    partial void InsertQuestion(Question instance);
    partial void UpdateQuestion(Question instance);
    partial void DeleteQuestion(Question instance);
    partial void InsertSchool(School instance);
    partial void UpdateSchool(School instance);
    partial void DeleteSchool(School instance);
    partial void InsertStudent(Student instance);
    partial void UpdateStudent(Student instance);
    partial void DeleteStudent(Student instance);
    partial void InsertStudents_Join_Club(Students_Join_Club instance);
    partial void UpdateStudents_Join_Club(Students_Join_Club instance);
    partial void DeleteStudents_Join_Club(Students_Join_Club instance);
    partial void InsertStudents_ParticipateIn_Activity(Students_ParticipateIn_Activity instance);
    partial void UpdateStudents_ParticipateIn_Activity(Students_ParticipateIn_Activity instance);
    partial void DeleteStudents_ParticipateIn_Activity(Students_ParticipateIn_Activity instance);
    partial void InsertStudents_Submits_Assignments_In_Course(Students_Submits_Assignments_In_Course instance);
    partial void UpdateStudents_Submits_Assignments_In_Course(Students_Submits_Assignments_In_Course instance);
    partial void DeleteStudents_Submits_Assignments_In_Course(Students_Submits_Assignments_In_Course instance);
    partial void InsertTeacher(Teacher instance);
    partial void UpdateTeacher(Teacher instance);
    partial void DeleteTeacher(Teacher instance);
    partial void InsertTeachers_teaches_Courses_to_Student(Teachers_teaches_Courses_to_Student instance);
    partial void UpdateTeachers_teaches_Courses_to_Student(Teachers_teaches_Courses_to_Student instance);
    partial void DeleteTeachers_teaches_Courses_to_Student(Teachers_teaches_Courses_to_Student instance);
    #endregion
		
		public schoolsDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["checkConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public schoolsDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public schoolsDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public schoolsDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public schoolsDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Activity> Activities
		{
			get
			{
				return this.GetTable<Activity>();
			}
		}
		
		public System.Data.Linq.Table<Administrator> Administrators
		{
			get
			{
				return this.GetTable<Administrator>();
			}
		}
		
		public System.Data.Linq.Table<Administrators_Assign_Activity> Administrators_Assign_Activities
		{
			get
			{
				return this.GetTable<Administrators_Assign_Activity>();
			}
		}
		
		public System.Data.Linq.Table<Announcement> Announcements
		{
			get
			{
				return this.GetTable<Announcement>();
			}
		}
		
		public System.Data.Linq.Table<Assignment> Assignments
		{
			get
			{
				return this.GetTable<Assignment>();
			}
		}
		
		public System.Data.Linq.Table<Children> Childrens
		{
			get
			{
				return this.GetTable<Children>();
			}
		}
		
		public System.Data.Linq.Table<Club> Clubs
		{
			get
			{
				return this.GetTable<Club>();
			}
		}
		
		public System.Data.Linq.Table<Course> Courses
		{
			get
			{
				return this.GetTable<Course>();
			}
		}
		
		public System.Data.Linq.Table<Courses_Prerequisite> Courses_Prerequisites
		{
			get
			{
				return this.GetTable<Courses_Prerequisite>();
			}
		}
		
		public System.Data.Linq.Table<Elementary> Elementaries
		{
			get
			{
				return this.GetTable<Elementary>();
			}
		}
		
		public System.Data.Linq.Table<Elementaries_Supplies_List> Elementaries_Supplies_Lists
		{
			get
			{
				return this.GetTable<Elementaries_Supplies_List>();
			}
		}
		
		public System.Data.Linq.Table<Employee> Employees
		{
			get
			{
				return this.GetTable<Employee>();
			}
		}
		
		public System.Data.Linq.Table<High> Highs
		{
			get
			{
				return this.GetTable<High>();
			}
		}
		
		public System.Data.Linq.Table<Middle> Middles
		{
			get
			{
				return this.GetTable<Middle>();
			}
		}
		
		public System.Data.Linq.Table<Parent> Parents
		{
			get
			{
				return this.GetTable<Parent>();
			}
		}
		
		public System.Data.Linq.Table<Parents_ApplyForChildIn_School> Parents_ApplyForChildIn_Schools
		{
			get
			{
				return this.GetTable<Parents_ApplyForChildIn_School>();
			}
		}
		
		public System.Data.Linq.Table<Parents_Mobile> Parents_Mobiles
		{
			get
			{
				return this.GetTable<Parents_Mobile>();
			}
		}
		
		public System.Data.Linq.Table<Parents_Review_School> Parents_Review_Schools
		{
			get
			{
				return this.GetTable<Parents_Review_School>();
			}
		}
		
		public System.Data.Linq.Table<Question> Questions
		{
			get
			{
				return this.GetTable<Question>();
			}
		}
		
		public System.Data.Linq.Table<School> Schools
		{
			get
			{
				return this.GetTable<School>();
			}
		}
		
		public System.Data.Linq.Table<Student> Students
		{
			get
			{
				return this.GetTable<Student>();
			}
		}
		
		public System.Data.Linq.Table<Students_Join_Club> Students_Join_Clubs
		{
			get
			{
				return this.GetTable<Students_Join_Club>();
			}
		}
		
		public System.Data.Linq.Table<Students_ParticipateIn_Activity> Students_ParticipateIn_Activities
		{
			get
			{
				return this.GetTable<Students_ParticipateIn_Activity>();
			}
		}
		
		public System.Data.Linq.Table<Students_Submits_Assignments_In_Course> Students_Submits_Assignments_In_Courses
		{
			get
			{
				return this.GetTable<Students_Submits_Assignments_In_Course>();
			}
		}
		
		public System.Data.Linq.Table<Teacher> Teachers
		{
			get
			{
				return this.GetTable<Teacher>();
			}
		}
		
		public System.Data.Linq.Table<Teachers_assigned_to_Course> Teachers_assigned_to_Courses
		{
			get
			{
				return this.GetTable<Teachers_assigned_to_Course>();
			}
		}
		
		public System.Data.Linq.Table<Teachers_teaches_Courses_to_Student> Teachers_teaches_Courses_to_Students
		{
			get
			{
				return this.GetTable<Teachers_teaches_Courses_to_Student>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.questions_answered_by_teacher")]
		public int questions_answered_by_teacher([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> primary_key, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Text")] string answer)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), primary_key, answer);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.questions_viewed_by_teacher")]
		public ISingleResult<questions_viewed_by_teacherResult> questions_viewed_by_teacher([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string course, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string username)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), course, username);
			return ((ISingleResult<questions_viewed_by_teacherResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.student_has_report_from_teacher")]
		public int student_has_report_from_teacher([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string username, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> ssn, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(500)")] string comment)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), username, ssn, comment);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.students_seen_by_teacher")]
		public ISingleResult<students_seen_by_teacherResult> students_seen_by_teacher([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string username)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), username);
			return ((ISingleResult<students_seen_by_teacherResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.teacher_delete_assignment")]
		public int teacher_delete_assignment([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> posting_date, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> due_date, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string code)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), posting_date, due_date, code);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.teacher_grade_assignment")]
		public int teacher_grade_assignment([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> ssn, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string username, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> posting_date, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> due_date, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string code, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Decimal(18,0)")] System.Nullable<decimal> grade)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ssn, username, posting_date, due_date, code, grade);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.teacher_post_assignment")]
		public int teacher_post_assignment([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string username, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string code, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> posting_date, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> due_date, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Text")] string content, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Decimal(18,0)")] System.Nullable<decimal> maximum_marks)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), username, code, posting_date, due_date, content, maximum_marks);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.teacher_signup")]
		public int teacher_signup([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string first_name, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string middle_name, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string last_name, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> birthdate, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(100)")] string address, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(100)")] string email, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(10)")] string gender, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string username, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string password)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), first_name, middle_name, last_name, birthdate, address, email, gender, username, password);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.teacher_view_courses")]
		public ISingleResult<teacher_view_coursesResult> teacher_view_courses([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string username)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), username);
			return ((ISingleResult<teacher_view_coursesResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.teacher_view_soluions_for_Assignments")]
		public ISingleResult<teacher_view_soluions_for_AssignmentsResult> teacher_view_soluions_for_Assignments([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string username, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string course)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), username, course);
			return ((ISingleResult<teacher_view_soluions_for_AssignmentsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.teacher_view_student_who_participates_maximum_clubs")]
		public ISingleResult<teacher_view_student_who_participates_maximum_clubsResult> teacher_view_student_who_participates_maximum_clubs([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string username)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), username);
			return ((ISingleResult<teacher_view_student_who_participates_maximum_clubsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.teacher_view_students_with_no_activity")]
		public ISingleResult<teacher_view_students_with_no_activityResult> teacher_view_students_with_no_activity([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string username)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), username);
			return ((ISingleResult<teacher_view_students_with_no_activityResult>)(result.ReturnValue));
		}

        internal void teacher_post_assignment(string p, string p_2, DateTime dateTime, string p_3, string p_4, double p_5)
        {
            throw new NotImplementedException();
        }
    }
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Activities")]
	public partial class Activity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _primary_key;
		
		private string _type;
		
		private string _location;
		
		private System.Nullable<System.DateTime> _date;
		
		private string _equipment;
		
		private string _description;
		
		private EntityRef<Administrators_Assign_Activity> _Administrators_Assign_Activity;
		
		private EntitySet<Students_ParticipateIn_Activity> _Students_ParticipateIn_Activities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onprimary_keyChanging(int value);
    partial void Onprimary_keyChanged();
    partial void OntypeChanging(string value);
    partial void OntypeChanged();
    partial void OnlocationChanging(string value);
    partial void OnlocationChanged();
    partial void OndateChanging(System.Nullable<System.DateTime> value);
    partial void OndateChanged();
    partial void OnequipmentChanging(string value);
    partial void OnequipmentChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    #endregion
		
		public Activity()
		{
			this._Administrators_Assign_Activity = default(EntityRef<Administrators_Assign_Activity>);
			this._Students_ParticipateIn_Activities = new EntitySet<Students_ParticipateIn_Activity>(new Action<Students_ParticipateIn_Activity>(this.attach_Students_ParticipateIn_Activities), new Action<Students_ParticipateIn_Activity>(this.detach_Students_ParticipateIn_Activities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_primary_key", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int primary_key
		{
			get
			{
				return this._primary_key;
			}
			set
			{
				if ((this._primary_key != value))
				{
					this.Onprimary_keyChanging(value);
					this.SendPropertyChanging();
					this._primary_key = value;
					this.SendPropertyChanged("primary_key");
					this.Onprimary_keyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="VarChar(50)")]
		public string type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_location", DbType="VarChar(50)")]
		public string location
		{
			get
			{
				return this._location;
			}
			set
			{
				if ((this._location != value))
				{
					this.OnlocationChanging(value);
					this.SendPropertyChanging();
					this._location = value;
					this.SendPropertyChanged("location");
					this.OnlocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_equipment", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string equipment
		{
			get
			{
				return this._equipment;
			}
			set
			{
				if ((this._equipment != value))
				{
					this.OnequipmentChanging(value);
					this.SendPropertyChanging();
					this._equipment = value;
					this.SendPropertyChanged("equipment");
					this.OnequipmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Activity_Administrators_Assign_Activity", Storage="_Administrators_Assign_Activity", ThisKey="primary_key", OtherKey="activity", IsUnique=true, IsForeignKey=false)]
		public Administrators_Assign_Activity Administrators_Assign_Activity
		{
			get
			{
				return this._Administrators_Assign_Activity.Entity;
			}
			set
			{
				Administrators_Assign_Activity previousValue = this._Administrators_Assign_Activity.Entity;
				if (((previousValue != value) 
							|| (this._Administrators_Assign_Activity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Administrators_Assign_Activity.Entity = null;
						previousValue.Activity1 = null;
					}
					this._Administrators_Assign_Activity.Entity = value;
					if ((value != null))
					{
						value.Activity1 = this;
					}
					this.SendPropertyChanged("Administrators_Assign_Activity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Activity_Students_ParticipateIn_Activity", Storage="_Students_ParticipateIn_Activities", ThisKey="primary_key", OtherKey="activity")]
		public EntitySet<Students_ParticipateIn_Activity> Students_ParticipateIn_Activities
		{
			get
			{
				return this._Students_ParticipateIn_Activities;
			}
			set
			{
				this._Students_ParticipateIn_Activities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Students_ParticipateIn_Activities(Students_ParticipateIn_Activity entity)
		{
			this.SendPropertyChanging();
			entity.Activity1 = this;
		}
		
		private void detach_Students_ParticipateIn_Activities(Students_ParticipateIn_Activity entity)
		{
			this.SendPropertyChanging();
			entity.Activity1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Administrators")]
	public partial class Administrator : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _username;
		
		private EntitySet<Administrators_Assign_Activity> _Administrators_Assign_Activities;
		
		private EntitySet<Announcement> _Announcements;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<Employee> _Employee1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    #endregion
		
		public Administrator()
		{
			this._Administrators_Assign_Activities = new EntitySet<Administrators_Assign_Activity>(new Action<Administrators_Assign_Activity>(this.attach_Administrators_Assign_Activities), new Action<Administrators_Assign_Activity>(this.detach_Administrators_Assign_Activities));
			this._Announcements = new EntitySet<Announcement>(new Action<Announcement>(this.attach_Announcements), new Action<Announcement>(this.detach_Announcements));
			this._Employee = default(EntityRef<Employee>);
			this._Employee1 = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					if (this._Employee1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(50)")]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Administrator_Administrators_Assign_Activity", Storage="_Administrators_Assign_Activities", ThisKey="username", OtherKey="admin")]
		public EntitySet<Administrators_Assign_Activity> Administrators_Assign_Activities
		{
			get
			{
				return this._Administrators_Assign_Activities;
			}
			set
			{
				this._Administrators_Assign_Activities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Administrator_Announcement", Storage="_Announcements", ThisKey="username", OtherKey="admin")]
		public EntitySet<Announcement> Announcements
		{
			get
			{
				return this._Announcements;
			}
			set
			{
				this._Announcements.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Administrator", Storage="_Employee", ThisKey="username", OtherKey="username", IsForeignKey=true, DeleteRule="CASCADE")]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.Administrators.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.Administrators.Add(this);
						this._username = value.username;
					}
					else
					{
						this._username = default(string);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Administrator1", Storage="_Employee1", ThisKey="id", OtherKey="id", IsForeignKey=true)]
		public Employee Employee1
		{
			get
			{
				return this._Employee1.Entity;
			}
			set
			{
				Employee previousValue = this._Employee1.Entity;
				if (((previousValue != value) 
							|| (this._Employee1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee1.Entity = null;
						previousValue.Administrator = null;
					}
					this._Employee1.Entity = value;
					if ((value != null))
					{
						value.Administrator = this;
						this._id = value.id;
					}
					else
					{
						this._id = default(int);
					}
					this.SendPropertyChanged("Employee1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Administrators_Assign_Activities(Administrators_Assign_Activity entity)
		{
			this.SendPropertyChanging();
			entity.Administrator = this;
		}
		
		private void detach_Administrators_Assign_Activities(Administrators_Assign_Activity entity)
		{
			this.SendPropertyChanging();
			entity.Administrator = null;
		}
		
		private void attach_Announcements(Announcement entity)
		{
			this.SendPropertyChanging();
			entity.Administrator = this;
		}
		
		private void detach_Announcements(Announcement entity)
		{
			this.SendPropertyChanging();
			entity.Administrator = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Administrators_Assign_Activities")]
	public partial class Administrators_Assign_Activity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _activity;
		
		private string _teacher;
		
		private string _admin;
		
		private EntityRef<Activity> _Activity1;
		
		private EntityRef<Administrator> _Administrator;
		
		private EntityRef<Teacher> _Teacher1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnactivityChanging(int value);
    partial void OnactivityChanged();
    partial void OnteacherChanging(string value);
    partial void OnteacherChanged();
    partial void OnadminChanging(string value);
    partial void OnadminChanged();
    #endregion
		
		public Administrators_Assign_Activity()
		{
			this._Activity1 = default(EntityRef<Activity>);
			this._Administrator = default(EntityRef<Administrator>);
			this._Teacher1 = default(EntityRef<Teacher>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_activity", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int activity
		{
			get
			{
				return this._activity;
			}
			set
			{
				if ((this._activity != value))
				{
					if (this._Activity1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnactivityChanging(value);
					this.SendPropertyChanging();
					this._activity = value;
					this.SendPropertyChanged("activity");
					this.OnactivityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_teacher", DbType="VarChar(50)")]
		public string teacher
		{
			get
			{
				return this._teacher;
			}
			set
			{
				if ((this._teacher != value))
				{
					if (this._Teacher1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnteacherChanging(value);
					this.SendPropertyChanging();
					this._teacher = value;
					this.SendPropertyChanged("teacher");
					this.OnteacherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_admin", DbType="VarChar(50)")]
		public string admin
		{
			get
			{
				return this._admin;
			}
			set
			{
				if ((this._admin != value))
				{
					if (this._Administrator.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnadminChanging(value);
					this.SendPropertyChanging();
					this._admin = value;
					this.SendPropertyChanged("admin");
					this.OnadminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Activity_Administrators_Assign_Activity", Storage="_Activity1", ThisKey="activity", OtherKey="primary_key", IsForeignKey=true)]
		public Activity Activity1
		{
			get
			{
				return this._Activity1.Entity;
			}
			set
			{
				Activity previousValue = this._Activity1.Entity;
				if (((previousValue != value) 
							|| (this._Activity1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Activity1.Entity = null;
						previousValue.Administrators_Assign_Activity = null;
					}
					this._Activity1.Entity = value;
					if ((value != null))
					{
						value.Administrators_Assign_Activity = this;
						this._activity = value.primary_key;
					}
					else
					{
						this._activity = default(int);
					}
					this.SendPropertyChanged("Activity1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Administrator_Administrators_Assign_Activity", Storage="_Administrator", ThisKey="admin", OtherKey="username", IsForeignKey=true)]
		public Administrator Administrator
		{
			get
			{
				return this._Administrator.Entity;
			}
			set
			{
				Administrator previousValue = this._Administrator.Entity;
				if (((previousValue != value) 
							|| (this._Administrator.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Administrator.Entity = null;
						previousValue.Administrators_Assign_Activities.Remove(this);
					}
					this._Administrator.Entity = value;
					if ((value != null))
					{
						value.Administrators_Assign_Activities.Add(this);
						this._admin = value.username;
					}
					else
					{
						this._admin = default(string);
					}
					this.SendPropertyChanged("Administrator");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Teacher_Administrators_Assign_Activity", Storage="_Teacher1", ThisKey="teacher", OtherKey="username", IsForeignKey=true)]
		public Teacher Teacher1
		{
			get
			{
				return this._Teacher1.Entity;
			}
			set
			{
				Teacher previousValue = this._Teacher1.Entity;
				if (((previousValue != value) 
							|| (this._Teacher1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Teacher1.Entity = null;
						previousValue.Administrators_Assign_Activities.Remove(this);
					}
					this._Teacher1.Entity = value;
					if ((value != null))
					{
						value.Administrators_Assign_Activities.Add(this);
						this._teacher = value.username;
					}
					else
					{
						this._teacher = default(string);
					}
					this.SendPropertyChanged("Teacher1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Announcements")]
	public partial class Announcement : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _primary_key;
		
		private string _type;
		
		private System.Nullable<System.DateTime> _date;
		
		private string _title;
		
		private string _description;
		
		private string _admin;
		
		private EntityRef<Administrator> _Administrator;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onprimary_keyChanging(int value);
    partial void Onprimary_keyChanged();
    partial void OntypeChanging(string value);
    partial void OntypeChanged();
    partial void OndateChanging(System.Nullable<System.DateTime> value);
    partial void OndateChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnadminChanging(string value);
    partial void OnadminChanged();
    #endregion
		
		public Announcement()
		{
			this._Administrator = default(EntityRef<Administrator>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_primary_key", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int primary_key
		{
			get
			{
				return this._primary_key;
			}
			set
			{
				if ((this._primary_key != value))
				{
					this.Onprimary_keyChanging(value);
					this.SendPropertyChanging();
					this._primary_key = value;
					this.SendPropertyChanged("primary_key");
					this.Onprimary_keyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="VarChar(50)")]
		public string type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="VarChar(50)")]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_admin", DbType="VarChar(50)")]
		public string admin
		{
			get
			{
				return this._admin;
			}
			set
			{
				if ((this._admin != value))
				{
					if (this._Administrator.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnadminChanging(value);
					this.SendPropertyChanging();
					this._admin = value;
					this.SendPropertyChanged("admin");
					this.OnadminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Administrator_Announcement", Storage="_Administrator", ThisKey="admin", OtherKey="username", IsForeignKey=true, DeleteRule="SET NULL")]
		public Administrator Administrator
		{
			get
			{
				return this._Administrator.Entity;
			}
			set
			{
				Administrator previousValue = this._Administrator.Entity;
				if (((previousValue != value) 
							|| (this._Administrator.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Administrator.Entity = null;
						previousValue.Announcements.Remove(this);
					}
					this._Administrator.Entity = value;
					if ((value != null))
					{
						value.Announcements.Add(this);
						this._admin = value.username;
					}
					else
					{
						this._admin = default(string);
					}
					this.SendPropertyChanged("Administrator");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Assignments")]
	public partial class Assignment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.DateTime _posting_date;
		
		private System.DateTime _due_date;
		
		private string _content;
		
		private System.Nullable<decimal> _maximum_marks;
		
		private string _code;
		
		private string _teacher;
		
		private EntitySet<Students_Submits_Assignments_In_Course> _Students_Submits_Assignments_In_Courses;
		
		private EntityRef<Course> _Course;
		
		private EntityRef<Teacher> _Teacher1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onposting_dateChanging(System.DateTime value);
    partial void Onposting_dateChanged();
    partial void Ondue_dateChanging(System.DateTime value);
    partial void Ondue_dateChanged();
    partial void OncontentChanging(string value);
    partial void OncontentChanged();
    partial void Onmaximum_marksChanging(System.Nullable<decimal> value);
    partial void Onmaximum_marksChanged();
    partial void OncodeChanging(string value);
    partial void OncodeChanged();
    partial void OnteacherChanging(string value);
    partial void OnteacherChanged();
    #endregion
		
		public Assignment()
		{
			this._Students_Submits_Assignments_In_Courses = new EntitySet<Students_Submits_Assignments_In_Course>(new Action<Students_Submits_Assignments_In_Course>(this.attach_Students_Submits_Assignments_In_Courses), new Action<Students_Submits_Assignments_In_Course>(this.detach_Students_Submits_Assignments_In_Courses));
			this._Course = default(EntityRef<Course>);
			this._Teacher1 = default(EntityRef<Teacher>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_posting_date", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime posting_date
		{
			get
			{
				return this._posting_date;
			}
			set
			{
				if ((this._posting_date != value))
				{
					this.Onposting_dateChanging(value);
					this.SendPropertyChanging();
					this._posting_date = value;
					this.SendPropertyChanged("posting_date");
					this.Onposting_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_due_date", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime due_date
		{
			get
			{
				return this._due_date;
			}
			set
			{
				if ((this._due_date != value))
				{
					this.Ondue_dateChanging(value);
					this.SendPropertyChanging();
					this._due_date = value;
					this.SendPropertyChanged("due_date");
					this.Ondue_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_content", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string content
		{
			get
			{
				return this._content;
			}
			set
			{
				if ((this._content != value))
				{
					this.OncontentChanging(value);
					this.SendPropertyChanging();
					this._content = value;
					this.SendPropertyChanged("content");
					this.OncontentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maximum_marks", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> maximum_marks
		{
			get
			{
				return this._maximum_marks;
			}
			set
			{
				if ((this._maximum_marks != value))
				{
					this.Onmaximum_marksChanging(value);
					this.SendPropertyChanging();
					this._maximum_marks = value;
					this.SendPropertyChanged("maximum_marks");
					this.Onmaximum_marksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					if (this._Course.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_teacher", DbType="VarChar(50)")]
		public string teacher
		{
			get
			{
				return this._teacher;
			}
			set
			{
				if ((this._teacher != value))
				{
					if (this._Teacher1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnteacherChanging(value);
					this.SendPropertyChanging();
					this._teacher = value;
					this.SendPropertyChanged("teacher");
					this.OnteacherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Assignment_Students_Submits_Assignments_In_Course", Storage="_Students_Submits_Assignments_In_Courses", ThisKey="posting_date,due_date,code", OtherKey="post_date,due_date,course")]
		public EntitySet<Students_Submits_Assignments_In_Course> Students_Submits_Assignments_In_Courses
		{
			get
			{
				return this._Students_Submits_Assignments_In_Courses;
			}
			set
			{
				this._Students_Submits_Assignments_In_Courses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Course_Assignment", Storage="_Course", ThisKey="code", OtherKey="code", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Course Course
		{
			get
			{
				return this._Course.Entity;
			}
			set
			{
				Course previousValue = this._Course.Entity;
				if (((previousValue != value) 
							|| (this._Course.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Course.Entity = null;
						previousValue.Assignments.Remove(this);
					}
					this._Course.Entity = value;
					if ((value != null))
					{
						value.Assignments.Add(this);
						this._code = value.code;
					}
					else
					{
						this._code = default(string);
					}
					this.SendPropertyChanged("Course");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Teacher_Assignment", Storage="_Teacher1", ThisKey="teacher", OtherKey="username", IsForeignKey=true, DeleteRule="CASCADE")]
		public Teacher Teacher1
		{
			get
			{
				return this._Teacher1.Entity;
			}
			set
			{
				Teacher previousValue = this._Teacher1.Entity;
				if (((previousValue != value) 
							|| (this._Teacher1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Teacher1.Entity = null;
						previousValue.Assignments.Remove(this);
					}
					this._Teacher1.Entity = value;
					if ((value != null))
					{
						value.Assignments.Add(this);
						this._teacher = value.username;
					}
					else
					{
						this._teacher = default(string);
					}
					this.SendPropertyChanged("Teacher1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Students_Submits_Assignments_In_Courses(Students_Submits_Assignments_In_Course entity)
		{
			this.SendPropertyChanging();
			entity.Assignment = this;
		}
		
		private void detach_Students_Submits_Assignments_In_Courses(Students_Submits_Assignments_In_Course entity)
		{
			this.SendPropertyChanging();
			entity.Assignment = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Children")]
	public partial class Children : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ssn;
		
		private string _name;
		
		private string _gender;
		
		private System.Nullable<System.DateTime> _birth_date;
		
		private System.Nullable<int> _age;
		
		private string _parent;
		
		private EntitySet<Parents_ApplyForChildIn_School> _Parents_ApplyForChildIn_Schools;
		
		private EntityRef<Student> _Student;
		
		private EntityRef<Parent> _Parent1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnssnChanging(int value);
    partial void OnssnChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OngenderChanging(string value);
    partial void OngenderChanged();
    partial void Onbirth_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onbirth_dateChanged();
    partial void OnageChanging(System.Nullable<int> value);
    partial void OnageChanged();
    partial void OnparentChanging(string value);
    partial void OnparentChanged();
    #endregion
		
		public Children()
		{
			this._Parents_ApplyForChildIn_Schools = new EntitySet<Parents_ApplyForChildIn_School>(new Action<Parents_ApplyForChildIn_School>(this.attach_Parents_ApplyForChildIn_Schools), new Action<Parents_ApplyForChildIn_School>(this.detach_Parents_ApplyForChildIn_Schools));
			this._Student = default(EntityRef<Student>);
			this._Parent1 = default(EntityRef<Parent>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ssn", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ssn
		{
			get
			{
				return this._ssn;
			}
			set
			{
				if ((this._ssn != value))
				{
					this.OnssnChanging(value);
					this.SendPropertyChanging();
					this._ssn = value;
					this.SendPropertyChanged("ssn");
					this.OnssnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gender", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string gender
		{
			get
			{
				return this._gender;
			}
			set
			{
				if ((this._gender != value))
				{
					this.OngenderChanging(value);
					this.SendPropertyChanging();
					this._gender = value;
					this.SendPropertyChanged("gender");
					this.OngenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_birth_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> birth_date
		{
			get
			{
				return this._birth_date;
			}
			set
			{
				if ((this._birth_date != value))
				{
					this.Onbirth_dateChanging(value);
					this.SendPropertyChanging();
					this._birth_date = value;
					this.SendPropertyChanged("birth_date");
					this.Onbirth_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_age", AutoSync=AutoSync.Always, DbType="Int", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> age
		{
			get
			{
				return this._age;
			}
			set
			{
				if ((this._age != value))
				{
					this.OnageChanging(value);
					this.SendPropertyChanging();
					this._age = value;
					this.SendPropertyChanged("age");
					this.OnageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_parent", DbType="VarChar(50)")]
		public string parent
		{
			get
			{
				return this._parent;
			}
			set
			{
				if ((this._parent != value))
				{
					if (this._Parent1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnparentChanging(value);
					this.SendPropertyChanging();
					this._parent = value;
					this.SendPropertyChanged("parent");
					this.OnparentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Children_Parents_ApplyForChildIn_School", Storage="_Parents_ApplyForChildIn_Schools", ThisKey="ssn", OtherKey="child")]
		public EntitySet<Parents_ApplyForChildIn_School> Parents_ApplyForChildIn_Schools
		{
			get
			{
				return this._Parents_ApplyForChildIn_Schools;
			}
			set
			{
				this._Parents_ApplyForChildIn_Schools.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Children_Student", Storage="_Student", ThisKey="ssn", OtherKey="ssn", IsUnique=true, IsForeignKey=false)]
		public Student Student
		{
			get
			{
				return this._Student.Entity;
			}
			set
			{
				Student previousValue = this._Student.Entity;
				if (((previousValue != value) 
							|| (this._Student.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Student.Entity = null;
						previousValue.Children = null;
					}
					this._Student.Entity = value;
					if ((value != null))
					{
						value.Children = this;
					}
					this.SendPropertyChanged("Student");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Parent_Children", Storage="_Parent1", ThisKey="parent", OtherKey="username", IsForeignKey=true, DeleteRule="SET NULL")]
		public Parent Parent1
		{
			get
			{
				return this._Parent1.Entity;
			}
			set
			{
				Parent previousValue = this._Parent1.Entity;
				if (((previousValue != value) 
							|| (this._Parent1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Parent1.Entity = null;
						previousValue.Childrens.Remove(this);
					}
					this._Parent1.Entity = value;
					if ((value != null))
					{
						value.Childrens.Add(this);
						this._parent = value.username;
					}
					else
					{
						this._parent = default(string);
					}
					this.SendPropertyChanged("Parent1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Parents_ApplyForChildIn_Schools(Parents_ApplyForChildIn_School entity)
		{
			this.SendPropertyChanging();
			entity.Children = this;
		}
		
		private void detach_Parents_ApplyForChildIn_Schools(Parents_ApplyForChildIn_School entity)
		{
			this.SendPropertyChanging();
			entity.Children = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Clubs")]
	public partial class Club : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _club_id;
		
		private string _name;
		
		private string _purpose;
		
		private System.Nullable<int> _high_school;
		
		private EntitySet<Students_Join_Club> _Students_Join_Clubs;
		
		private EntityRef<High> _High;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onclub_idChanging(int value);
    partial void Onclub_idChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnpurposeChanging(string value);
    partial void OnpurposeChanged();
    partial void Onhigh_schoolChanging(System.Nullable<int> value);
    partial void Onhigh_schoolChanged();
    #endregion
		
		public Club()
		{
			this._Students_Join_Clubs = new EntitySet<Students_Join_Club>(new Action<Students_Join_Club>(this.attach_Students_Join_Clubs), new Action<Students_Join_Club>(this.detach_Students_Join_Clubs));
			this._High = default(EntityRef<High>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_club_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int club_id
		{
			get
			{
				return this._club_id;
			}
			set
			{
				if ((this._club_id != value))
				{
					this.Onclub_idChanging(value);
					this.SendPropertyChanging();
					this._club_id = value;
					this.SendPropertyChanged("club_id");
					this.Onclub_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_purpose", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string purpose
		{
			get
			{
				return this._purpose;
			}
			set
			{
				if ((this._purpose != value))
				{
					this.OnpurposeChanging(value);
					this.SendPropertyChanging();
					this._purpose = value;
					this.SendPropertyChanged("purpose");
					this.OnpurposeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_high_school", DbType="Int")]
		public System.Nullable<int> high_school
		{
			get
			{
				return this._high_school;
			}
			set
			{
				if ((this._high_school != value))
				{
					if (this._High.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onhigh_schoolChanging(value);
					this.SendPropertyChanging();
					this._high_school = value;
					this.SendPropertyChanged("high_school");
					this.Onhigh_schoolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Club_Students_Join_Club", Storage="_Students_Join_Clubs", ThisKey="club_id", OtherKey="club")]
		public EntitySet<Students_Join_Club> Students_Join_Clubs
		{
			get
			{
				return this._Students_Join_Clubs;
			}
			set
			{
				this._Students_Join_Clubs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="High_Club", Storage="_High", ThisKey="high_school", OtherKey="school", IsForeignKey=true, DeleteRule="CASCADE")]
		public High High
		{
			get
			{
				return this._High.Entity;
			}
			set
			{
				High previousValue = this._High.Entity;
				if (((previousValue != value) 
							|| (this._High.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._High.Entity = null;
						previousValue.Clubs.Remove(this);
					}
					this._High.Entity = value;
					if ((value != null))
					{
						value.Clubs.Add(this);
						this._high_school = value.school;
					}
					else
					{
						this._high_school = default(Nullable<int>);
					}
					this.SendPropertyChanged("High");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Students_Join_Clubs(Students_Join_Club entity)
		{
			this.SendPropertyChanging();
			entity.Club1 = this;
		}
		
		private void detach_Students_Join_Clubs(Students_Join_Club entity)
		{
			this.SendPropertyChanging();
			entity.Club1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Courses")]
	public partial class Course : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _code;
		
		private string _name;
		
		private string _course_description;
		
		private int _course_level;
		
		private int _course_grade;
		
		private EntitySet<Assignment> _Assignments;
		
		private EntitySet<Courses_Prerequisite> _Courses_Prerequisites;
		
		private EntitySet<Courses_Prerequisite> _Courses_Prerequisites1;
		
		private EntitySet<Question> _Questions;
		
		private EntitySet<Teachers_teaches_Courses_to_Student> _Teachers_teaches_Courses_to_Students;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncodeChanging(string value);
    partial void OncodeChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void Oncourse_descriptionChanging(string value);
    partial void Oncourse_descriptionChanged();
    partial void Oncourse_levelChanging(int value);
    partial void Oncourse_levelChanged();
    partial void Oncourse_gradeChanging(int value);
    partial void Oncourse_gradeChanged();
    #endregion
		
		public Course()
		{
			this._Assignments = new EntitySet<Assignment>(new Action<Assignment>(this.attach_Assignments), new Action<Assignment>(this.detach_Assignments));
			this._Courses_Prerequisites = new EntitySet<Courses_Prerequisite>(new Action<Courses_Prerequisite>(this.attach_Courses_Prerequisites), new Action<Courses_Prerequisite>(this.detach_Courses_Prerequisites));
			this._Courses_Prerequisites1 = new EntitySet<Courses_Prerequisite>(new Action<Courses_Prerequisite>(this.attach_Courses_Prerequisites1), new Action<Courses_Prerequisite>(this.detach_Courses_Prerequisites1));
			this._Questions = new EntitySet<Question>(new Action<Question>(this.attach_Questions), new Action<Question>(this.detach_Questions));
			this._Teachers_teaches_Courses_to_Students = new EntitySet<Teachers_teaches_Courses_to_Student>(new Action<Teachers_teaches_Courses_to_Student>(this.attach_Teachers_teaches_Courses_to_Students), new Action<Teachers_teaches_Courses_to_Student>(this.detach_Teachers_teaches_Courses_to_Students));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_course_description", DbType="VarChar(200)")]
		public string course_description
		{
			get
			{
				return this._course_description;
			}
			set
			{
				if ((this._course_description != value))
				{
					this.Oncourse_descriptionChanging(value);
					this.SendPropertyChanging();
					this._course_description = value;
					this.SendPropertyChanged("course_description");
					this.Oncourse_descriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_course_level", DbType="Int NOT NULL")]
		public int course_level
		{
			get
			{
				return this._course_level;
			}
			set
			{
				if ((this._course_level != value))
				{
					this.Oncourse_levelChanging(value);
					this.SendPropertyChanging();
					this._course_level = value;
					this.SendPropertyChanged("course_level");
					this.Oncourse_levelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_course_grade", DbType="Int NOT NULL")]
		public int course_grade
		{
			get
			{
				return this._course_grade;
			}
			set
			{
				if ((this._course_grade != value))
				{
					this.Oncourse_gradeChanging(value);
					this.SendPropertyChanging();
					this._course_grade = value;
					this.SendPropertyChanged("course_grade");
					this.Oncourse_gradeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Course_Assignment", Storage="_Assignments", ThisKey="code", OtherKey="code")]
		public EntitySet<Assignment> Assignments
		{
			get
			{
				return this._Assignments;
			}
			set
			{
				this._Assignments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Course_Courses_Prerequisite", Storage="_Courses_Prerequisites", ThisKey="code", OtherKey="pre_code")]
		public EntitySet<Courses_Prerequisite> Courses_Prerequisites
		{
			get
			{
				return this._Courses_Prerequisites;
			}
			set
			{
				this._Courses_Prerequisites.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Course_Courses_Prerequisite1", Storage="_Courses_Prerequisites1", ThisKey="code", OtherKey="code")]
		public EntitySet<Courses_Prerequisite> Courses_Prerequisites1
		{
			get
			{
				return this._Courses_Prerequisites1;
			}
			set
			{
				this._Courses_Prerequisites1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Course_Question", Storage="_Questions", ThisKey="code", OtherKey="course")]
		public EntitySet<Question> Questions
		{
			get
			{
				return this._Questions;
			}
			set
			{
				this._Questions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Course_Teachers_teaches_Courses_to_Student", Storage="_Teachers_teaches_Courses_to_Students", ThisKey="code", OtherKey="course")]
		public EntitySet<Teachers_teaches_Courses_to_Student> Teachers_teaches_Courses_to_Students
		{
			get
			{
				return this._Teachers_teaches_Courses_to_Students;
			}
			set
			{
				this._Teachers_teaches_Courses_to_Students.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Assignments(Assignment entity)
		{
			this.SendPropertyChanging();
			entity.Course = this;
		}
		
		private void detach_Assignments(Assignment entity)
		{
			this.SendPropertyChanging();
			entity.Course = null;
		}
		
		private void attach_Courses_Prerequisites(Courses_Prerequisite entity)
		{
			this.SendPropertyChanging();
			entity.Course = this;
		}
		
		private void detach_Courses_Prerequisites(Courses_Prerequisite entity)
		{
			this.SendPropertyChanging();
			entity.Course = null;
		}
		
		private void attach_Courses_Prerequisites1(Courses_Prerequisite entity)
		{
			this.SendPropertyChanging();
			entity.Course1 = this;
		}
		
		private void detach_Courses_Prerequisites1(Courses_Prerequisite entity)
		{
			this.SendPropertyChanging();
			entity.Course1 = null;
		}
		
		private void attach_Questions(Question entity)
		{
			this.SendPropertyChanging();
			entity.Course1 = this;
		}
		
		private void detach_Questions(Question entity)
		{
			this.SendPropertyChanging();
			entity.Course1 = null;
		}
		
		private void attach_Teachers_teaches_Courses_to_Students(Teachers_teaches_Courses_to_Student entity)
		{
			this.SendPropertyChanging();
			entity.Course1 = this;
		}
		
		private void detach_Teachers_teaches_Courses_to_Students(Teachers_teaches_Courses_to_Student entity)
		{
			this.SendPropertyChanging();
			entity.Course1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Courses_Prerequisites")]
	public partial class Courses_Prerequisite : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _code;
		
		private string _pre_code;
		
		private EntityRef<Course> _Course;
		
		private EntityRef<Course> _Course1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncodeChanging(string value);
    partial void OncodeChanged();
    partial void Onpre_codeChanging(string value);
    partial void Onpre_codeChanged();
    #endregion
		
		public Courses_Prerequisite()
		{
			this._Course = default(EntityRef<Course>);
			this._Course1 = default(EntityRef<Course>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					if (this._Course1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pre_code", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string pre_code
		{
			get
			{
				return this._pre_code;
			}
			set
			{
				if ((this._pre_code != value))
				{
					if (this._Course.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpre_codeChanging(value);
					this.SendPropertyChanging();
					this._pre_code = value;
					this.SendPropertyChanged("pre_code");
					this.Onpre_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Course_Courses_Prerequisite", Storage="_Course", ThisKey="pre_code", OtherKey="code", IsForeignKey=true)]
		public Course Course
		{
			get
			{
				return this._Course.Entity;
			}
			set
			{
				Course previousValue = this._Course.Entity;
				if (((previousValue != value) 
							|| (this._Course.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Course.Entity = null;
						previousValue.Courses_Prerequisites.Remove(this);
					}
					this._Course.Entity = value;
					if ((value != null))
					{
						value.Courses_Prerequisites.Add(this);
						this._pre_code = value.code;
					}
					else
					{
						this._pre_code = default(string);
					}
					this.SendPropertyChanged("Course");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Course_Courses_Prerequisite1", Storage="_Course1", ThisKey="code", OtherKey="code", IsForeignKey=true)]
		public Course Course1
		{
			get
			{
				return this._Course1.Entity;
			}
			set
			{
				Course previousValue = this._Course1.Entity;
				if (((previousValue != value) 
							|| (this._Course1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Course1.Entity = null;
						previousValue.Courses_Prerequisites1.Remove(this);
					}
					this._Course1.Entity = value;
					if ((value != null))
					{
						value.Courses_Prerequisites1.Add(this);
						this._code = value.code;
					}
					else
					{
						this._code = default(string);
					}
					this.SendPropertyChanged("Course1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Elementaries")]
	public partial class Elementary : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _school;
		
		private EntityRef<Elementaries_Supplies_List> _Elementaries_Supplies_List;
		
		private EntityRef<School> _School1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnschoolChanging(int value);
    partial void OnschoolChanged();
    #endregion
		
		public Elementary()
		{
			this._Elementaries_Supplies_List = default(EntityRef<Elementaries_Supplies_List>);
			this._School1 = default(EntityRef<School>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_school", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int school
		{
			get
			{
				return this._school;
			}
			set
			{
				if ((this._school != value))
				{
					if (this._School1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnschoolChanging(value);
					this.SendPropertyChanging();
					this._school = value;
					this.SendPropertyChanged("school");
					this.OnschoolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Elementary_Elementaries_Supplies_List", Storage="_Elementaries_Supplies_List", ThisKey="school", OtherKey="school", IsUnique=true, IsForeignKey=false)]
		public Elementaries_Supplies_List Elementaries_Supplies_List
		{
			get
			{
				return this._Elementaries_Supplies_List.Entity;
			}
			set
			{
				Elementaries_Supplies_List previousValue = this._Elementaries_Supplies_List.Entity;
				if (((previousValue != value) 
							|| (this._Elementaries_Supplies_List.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Elementaries_Supplies_List.Entity = null;
						previousValue.Elementary = null;
					}
					this._Elementaries_Supplies_List.Entity = value;
					if ((value != null))
					{
						value.Elementary = this;
					}
					this.SendPropertyChanged("Elementaries_Supplies_List");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_Elementary", Storage="_School1", ThisKey="school", OtherKey="primary_key", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public School School1
		{
			get
			{
				return this._School1.Entity;
			}
			set
			{
				School previousValue = this._School1.Entity;
				if (((previousValue != value) 
							|| (this._School1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._School1.Entity = null;
						previousValue.Elementary = null;
					}
					this._School1.Entity = value;
					if ((value != null))
					{
						value.Elementary = this;
						this._school = value.primary_key;
					}
					else
					{
						this._school = default(int);
					}
					this.SendPropertyChanged("School1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Elementaries_Supplies_Lists")]
	public partial class Elementaries_Supplies_List : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _school;
		
		private string _supplies;
		
		private EntityRef<Elementary> _Elementary;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnschoolChanging(int value);
    partial void OnschoolChanged();
    partial void OnsuppliesChanging(string value);
    partial void OnsuppliesChanged();
    #endregion
		
		public Elementaries_Supplies_List()
		{
			this._Elementary = default(EntityRef<Elementary>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_school", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int school
		{
			get
			{
				return this._school;
			}
			set
			{
				if ((this._school != value))
				{
					if (this._Elementary.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnschoolChanging(value);
					this.SendPropertyChanging();
					this._school = value;
					this.SendPropertyChanged("school");
					this.OnschoolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_supplies", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string supplies
		{
			get
			{
				return this._supplies;
			}
			set
			{
				if ((this._supplies != value))
				{
					this.OnsuppliesChanging(value);
					this.SendPropertyChanging();
					this._supplies = value;
					this.SendPropertyChanged("supplies");
					this.OnsuppliesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Elementary_Elementaries_Supplies_List", Storage="_Elementary", ThisKey="school", OtherKey="school", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Elementary Elementary
		{
			get
			{
				return this._Elementary.Entity;
			}
			set
			{
				Elementary previousValue = this._Elementary.Entity;
				if (((previousValue != value) 
							|| (this._Elementary.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Elementary.Entity = null;
						previousValue.Elementaries_Supplies_List = null;
					}
					this._Elementary.Entity = value;
					if ((value != null))
					{
						value.Elementaries_Supplies_List = this;
						this._school = value.school;
					}
					else
					{
						this._school = default(int);
					}
					this.SendPropertyChanged("Elementary");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Employees")]
	public partial class Employee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _username;
		
		private string _password;
		
		private System.Nullable<decimal> _salary;
		
		private string _gender;
		
		private string _first_name;
		
		private string _middle_name;
		
		private string _last_name;
		
		private string _address;
		
		private System.Nullable<System.DateTime> _birth_date;
		
		private string _mail;
		
		private System.Nullable<int> _school;
		
		private EntitySet<Administrator> _Administrators;
		
		private EntityRef<Administrator> _Administrator;
		
		private EntityRef<Teacher> _Teacher;
		
		private EntitySet<Teacher> _Teachers;
		
		private EntityRef<School> _School1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnsalaryChanging(System.Nullable<decimal> value);
    partial void OnsalaryChanged();
    partial void OngenderChanging(string value);
    partial void OngenderChanged();
    partial void Onfirst_nameChanging(string value);
    partial void Onfirst_nameChanged();
    partial void Onmiddle_nameChanging(string value);
    partial void Onmiddle_nameChanged();
    partial void Onlast_nameChanging(string value);
    partial void Onlast_nameChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void Onbirth_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onbirth_dateChanged();
    partial void OnmailChanging(string value);
    partial void OnmailChanged();
    partial void OnschoolChanging(System.Nullable<int> value);
    partial void OnschoolChanged();
    #endregion
		
		public Employee()
		{
			this._Administrators = new EntitySet<Administrator>(new Action<Administrator>(this.attach_Administrators), new Action<Administrator>(this.detach_Administrators));
			this._Administrator = default(EntityRef<Administrator>);
			this._Teacher = default(EntityRef<Teacher>);
			this._Teachers = new EntitySet<Teacher>(new Action<Teacher>(this.attach_Teachers), new Action<Teacher>(this.detach_Teachers));
			this._School1 = default(EntityRef<School>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(50)")]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(50)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_salary", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> salary
		{
			get
			{
				return this._salary;
			}
			set
			{
				if ((this._salary != value))
				{
					this.OnsalaryChanging(value);
					this.SendPropertyChanging();
					this._salary = value;
					this.SendPropertyChanged("salary");
					this.OnsalaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gender", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string gender
		{
			get
			{
				return this._gender;
			}
			set
			{
				if ((this._gender != value))
				{
					this.OngenderChanging(value);
					this.SendPropertyChanging();
					this._gender = value;
					this.SendPropertyChanged("gender");
					this.OngenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_first_name", DbType="VarChar(50)")]
		public string first_name
		{
			get
			{
				return this._first_name;
			}
			set
			{
				if ((this._first_name != value))
				{
					this.Onfirst_nameChanging(value);
					this.SendPropertyChanging();
					this._first_name = value;
					this.SendPropertyChanged("first_name");
					this.Onfirst_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_middle_name", DbType="VarChar(50)")]
		public string middle_name
		{
			get
			{
				return this._middle_name;
			}
			set
			{
				if ((this._middle_name != value))
				{
					this.Onmiddle_nameChanging(value);
					this.SendPropertyChanging();
					this._middle_name = value;
					this.SendPropertyChanged("middle_name");
					this.Onmiddle_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_name", DbType="VarChar(50)")]
		public string last_name
		{
			get
			{
				return this._last_name;
			}
			set
			{
				if ((this._last_name != value))
				{
					this.Onlast_nameChanging(value);
					this.SendPropertyChanging();
					this._last_name = value;
					this.SendPropertyChanged("last_name");
					this.Onlast_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_birth_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> birth_date
		{
			get
			{
				return this._birth_date;
			}
			set
			{
				if ((this._birth_date != value))
				{
					this.Onbirth_dateChanging(value);
					this.SendPropertyChanging();
					this._birth_date = value;
					this.SendPropertyChanged("birth_date");
					this.Onbirth_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mail", DbType="VarChar(50)")]
		public string mail
		{
			get
			{
				return this._mail;
			}
			set
			{
				if ((this._mail != value))
				{
					this.OnmailChanging(value);
					this.SendPropertyChanging();
					this._mail = value;
					this.SendPropertyChanged("mail");
					this.OnmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_school", DbType="Int")]
		public System.Nullable<int> school
		{
			get
			{
				return this._school;
			}
			set
			{
				if ((this._school != value))
				{
					if (this._School1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnschoolChanging(value);
					this.SendPropertyChanging();
					this._school = value;
					this.SendPropertyChanged("school");
					this.OnschoolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Administrator", Storage="_Administrators", ThisKey="username", OtherKey="username")]
		public EntitySet<Administrator> Administrators
		{
			get
			{
				return this._Administrators;
			}
			set
			{
				this._Administrators.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Administrator1", Storage="_Administrator", ThisKey="id", OtherKey="id", IsUnique=true, IsForeignKey=false)]
		public Administrator Administrator
		{
			get
			{
				return this._Administrator.Entity;
			}
			set
			{
				Administrator previousValue = this._Administrator.Entity;
				if (((previousValue != value) 
							|| (this._Administrator.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Administrator.Entity = null;
						previousValue.Employee1 = null;
					}
					this._Administrator.Entity = value;
					if ((value != null))
					{
						value.Employee1 = this;
					}
					this.SendPropertyChanged("Administrator");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Teacher", Storage="_Teacher", ThisKey="id", OtherKey="id", IsUnique=true, IsForeignKey=false)]
		public Teacher Teacher
		{
			get
			{
				return this._Teacher.Entity;
			}
			set
			{
				Teacher previousValue = this._Teacher.Entity;
				if (((previousValue != value) 
							|| (this._Teacher.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Teacher.Entity = null;
						previousValue.Employee = null;
					}
					this._Teacher.Entity = value;
					if ((value != null))
					{
						value.Employee = this;
					}
					this.SendPropertyChanged("Teacher");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Teacher1", Storage="_Teachers", ThisKey="username", OtherKey="username")]
		public EntitySet<Teacher> Teachers
		{
			get
			{
				return this._Teachers;
			}
			set
			{
				this._Teachers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_Employee", Storage="_School1", ThisKey="school", OtherKey="primary_key", IsForeignKey=true, DeleteRule="SET NULL")]
		public School School1
		{
			get
			{
				return this._School1.Entity;
			}
			set
			{
				School previousValue = this._School1.Entity;
				if (((previousValue != value) 
							|| (this._School1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._School1.Entity = null;
						previousValue.Employees.Remove(this);
					}
					this._School1.Entity = value;
					if ((value != null))
					{
						value.Employees.Add(this);
						this._school = value.primary_key;
					}
					else
					{
						this._school = default(Nullable<int>);
					}
					this.SendPropertyChanged("School1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Administrators(Administrator entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_Administrators(Administrator entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_Teachers(Teacher entity)
		{
			this.SendPropertyChanging();
			entity.Employee1 = this;
		}
		
		private void detach_Teachers(Teacher entity)
		{
			this.SendPropertyChanging();
			entity.Employee1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Highs")]
	public partial class High : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _school;
		
		private EntitySet<Club> _Clubs;
		
		private EntityRef<School> _School1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnschoolChanging(int value);
    partial void OnschoolChanged();
    #endregion
		
		public High()
		{
			this._Clubs = new EntitySet<Club>(new Action<Club>(this.attach_Clubs), new Action<Club>(this.detach_Clubs));
			this._School1 = default(EntityRef<School>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_school", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int school
		{
			get
			{
				return this._school;
			}
			set
			{
				if ((this._school != value))
				{
					if (this._School1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnschoolChanging(value);
					this.SendPropertyChanging();
					this._school = value;
					this.SendPropertyChanged("school");
					this.OnschoolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="High_Club", Storage="_Clubs", ThisKey="school", OtherKey="high_school")]
		public EntitySet<Club> Clubs
		{
			get
			{
				return this._Clubs;
			}
			set
			{
				this._Clubs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_High", Storage="_School1", ThisKey="school", OtherKey="primary_key", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public School School1
		{
			get
			{
				return this._School1.Entity;
			}
			set
			{
				School previousValue = this._School1.Entity;
				if (((previousValue != value) 
							|| (this._School1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._School1.Entity = null;
						previousValue.High = null;
					}
					this._School1.Entity = value;
					if ((value != null))
					{
						value.High = this;
						this._school = value.primary_key;
					}
					else
					{
						this._school = default(int);
					}
					this.SendPropertyChanged("School1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Clubs(Club entity)
		{
			this.SendPropertyChanging();
			entity.High = this;
		}
		
		private void detach_Clubs(Club entity)
		{
			this.SendPropertyChanging();
			entity.High = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Middles")]
	public partial class Middle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _school;
		
		private EntityRef<School> _School1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnschoolChanging(int value);
    partial void OnschoolChanged();
    #endregion
		
		public Middle()
		{
			this._School1 = default(EntityRef<School>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_school", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int school
		{
			get
			{
				return this._school;
			}
			set
			{
				if ((this._school != value))
				{
					if (this._School1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnschoolChanging(value);
					this.SendPropertyChanging();
					this._school = value;
					this.SendPropertyChanged("school");
					this.OnschoolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_Middle", Storage="_School1", ThisKey="school", OtherKey="primary_key", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public School School1
		{
			get
			{
				return this._School1.Entity;
			}
			set
			{
				School previousValue = this._School1.Entity;
				if (((previousValue != value) 
							|| (this._School1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._School1.Entity = null;
						previousValue.Middle = null;
					}
					this._School1.Entity = value;
					if ((value != null))
					{
						value.Middle = this;
						this._school = value.primary_key;
					}
					else
					{
						this._school = default(int);
					}
					this.SendPropertyChanged("School1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Parents")]
	public partial class Parent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _username;
		
		private int _home_number;
		
		private string _mail;
		
		private string _password;
		
		private string _first_name;
		
		private string _last_name;
		
		private string _address;
		
		private EntitySet<Children> _Childrens;
		
		private EntitySet<Parents_ApplyForChildIn_School> _Parents_ApplyForChildIn_Schools;
		
		private EntitySet<Parents_Mobile> _Parents_Mobiles;
		
		private EntitySet<Parents_Review_School> _Parents_Review_Schools;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void Onhome_numberChanging(int value);
    partial void Onhome_numberChanged();
    partial void OnmailChanging(string value);
    partial void OnmailChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void Onfirst_nameChanging(string value);
    partial void Onfirst_nameChanged();
    partial void Onlast_nameChanging(string value);
    partial void Onlast_nameChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    #endregion
		
		public Parent()
		{
			this._Childrens = new EntitySet<Children>(new Action<Children>(this.attach_Childrens), new Action<Children>(this.detach_Childrens));
			this._Parents_ApplyForChildIn_Schools = new EntitySet<Parents_ApplyForChildIn_School>(new Action<Parents_ApplyForChildIn_School>(this.attach_Parents_ApplyForChildIn_Schools), new Action<Parents_ApplyForChildIn_School>(this.detach_Parents_ApplyForChildIn_Schools));
			this._Parents_Mobiles = new EntitySet<Parents_Mobile>(new Action<Parents_Mobile>(this.attach_Parents_Mobiles), new Action<Parents_Mobile>(this.detach_Parents_Mobiles));
			this._Parents_Review_Schools = new EntitySet<Parents_Review_School>(new Action<Parents_Review_School>(this.attach_Parents_Review_Schools), new Action<Parents_Review_School>(this.detach_Parents_Review_Schools));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_home_number", DbType="Int NOT NULL")]
		public int home_number
		{
			get
			{
				return this._home_number;
			}
			set
			{
				if ((this._home_number != value))
				{
					this.Onhome_numberChanging(value);
					this.SendPropertyChanging();
					this._home_number = value;
					this.SendPropertyChanged("home_number");
					this.Onhome_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mail", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string mail
		{
			get
			{
				return this._mail;
			}
			set
			{
				if ((this._mail != value))
				{
					this.OnmailChanging(value);
					this.SendPropertyChanging();
					this._mail = value;
					this.SendPropertyChanged("mail");
					this.OnmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_first_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string first_name
		{
			get
			{
				return this._first_name;
			}
			set
			{
				if ((this._first_name != value))
				{
					this.Onfirst_nameChanging(value);
					this.SendPropertyChanging();
					this._first_name = value;
					this.SendPropertyChanged("first_name");
					this.Onfirst_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string last_name
		{
			get
			{
				return this._last_name;
			}
			set
			{
				if ((this._last_name != value))
				{
					this.Onlast_nameChanging(value);
					this.SendPropertyChanging();
					this._last_name = value;
					this.SendPropertyChanged("last_name");
					this.Onlast_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Parent_Children", Storage="_Childrens", ThisKey="username", OtherKey="parent")]
		public EntitySet<Children> Childrens
		{
			get
			{
				return this._Childrens;
			}
			set
			{
				this._Childrens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Parent_Parents_ApplyForChildIn_School", Storage="_Parents_ApplyForChildIn_Schools", ThisKey="username", OtherKey="parent")]
		public EntitySet<Parents_ApplyForChildIn_School> Parents_ApplyForChildIn_Schools
		{
			get
			{
				return this._Parents_ApplyForChildIn_Schools;
			}
			set
			{
				this._Parents_ApplyForChildIn_Schools.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Parent_Parents_Mobile", Storage="_Parents_Mobiles", ThisKey="username", OtherKey="username")]
		public EntitySet<Parents_Mobile> Parents_Mobiles
		{
			get
			{
				return this._Parents_Mobiles;
			}
			set
			{
				this._Parents_Mobiles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Parent_Parents_Review_School", Storage="_Parents_Review_Schools", ThisKey="username", OtherKey="parent")]
		public EntitySet<Parents_Review_School> Parents_Review_Schools
		{
			get
			{
				return this._Parents_Review_Schools;
			}
			set
			{
				this._Parents_Review_Schools.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Childrens(Children entity)
		{
			this.SendPropertyChanging();
			entity.Parent1 = this;
		}
		
		private void detach_Childrens(Children entity)
		{
			this.SendPropertyChanging();
			entity.Parent1 = null;
		}
		
		private void attach_Parents_ApplyForChildIn_Schools(Parents_ApplyForChildIn_School entity)
		{
			this.SendPropertyChanging();
			entity.Parent1 = this;
		}
		
		private void detach_Parents_ApplyForChildIn_Schools(Parents_ApplyForChildIn_School entity)
		{
			this.SendPropertyChanging();
			entity.Parent1 = null;
		}
		
		private void attach_Parents_Mobiles(Parents_Mobile entity)
		{
			this.SendPropertyChanging();
			entity.Parent = this;
		}
		
		private void detach_Parents_Mobiles(Parents_Mobile entity)
		{
			this.SendPropertyChanging();
			entity.Parent = null;
		}
		
		private void attach_Parents_Review_Schools(Parents_Review_School entity)
		{
			this.SendPropertyChanging();
			entity.Parent1 = this;
		}
		
		private void detach_Parents_Review_Schools(Parents_Review_School entity)
		{
			this.SendPropertyChanging();
			entity.Parent1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Parents_ApplyForChildIn_Schools")]
	public partial class Parents_ApplyForChildIn_School : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _parent;
		
		private int _school;
		
		private int _child;
		
		private System.Nullable<bool> _accepted;
		
		private EntityRef<Children> _Children;
		
		private EntityRef<Parent> _Parent1;
		
		private EntityRef<School> _School1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnparentChanging(string value);
    partial void OnparentChanged();
    partial void OnschoolChanging(int value);
    partial void OnschoolChanged();
    partial void OnchildChanging(int value);
    partial void OnchildChanged();
    partial void OnacceptedChanging(System.Nullable<bool> value);
    partial void OnacceptedChanged();
    #endregion
		
		public Parents_ApplyForChildIn_School()
		{
			this._Children = default(EntityRef<Children>);
			this._Parent1 = default(EntityRef<Parent>);
			this._School1 = default(EntityRef<School>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_parent", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string parent
		{
			get
			{
				return this._parent;
			}
			set
			{
				if ((this._parent != value))
				{
					if (this._Parent1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnparentChanging(value);
					this.SendPropertyChanging();
					this._parent = value;
					this.SendPropertyChanged("parent");
					this.OnparentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_school", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int school
		{
			get
			{
				return this._school;
			}
			set
			{
				if ((this._school != value))
				{
					if (this._School1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnschoolChanging(value);
					this.SendPropertyChanging();
					this._school = value;
					this.SendPropertyChanged("school");
					this.OnschoolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_child", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int child
		{
			get
			{
				return this._child;
			}
			set
			{
				if ((this._child != value))
				{
					if (this._Children.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnchildChanging(value);
					this.SendPropertyChanging();
					this._child = value;
					this.SendPropertyChanged("child");
					this.OnchildChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_accepted", DbType="Bit")]
		public System.Nullable<bool> accepted
		{
			get
			{
				return this._accepted;
			}
			set
			{
				if ((this._accepted != value))
				{
					this.OnacceptedChanging(value);
					this.SendPropertyChanging();
					this._accepted = value;
					this.SendPropertyChanged("accepted");
					this.OnacceptedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Children_Parents_ApplyForChildIn_School", Storage="_Children", ThisKey="child", OtherKey="ssn", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Children Children
		{
			get
			{
				return this._Children.Entity;
			}
			set
			{
				Children previousValue = this._Children.Entity;
				if (((previousValue != value) 
							|| (this._Children.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Children.Entity = null;
						previousValue.Parents_ApplyForChildIn_Schools.Remove(this);
					}
					this._Children.Entity = value;
					if ((value != null))
					{
						value.Parents_ApplyForChildIn_Schools.Add(this);
						this._child = value.ssn;
					}
					else
					{
						this._child = default(int);
					}
					this.SendPropertyChanged("Children");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Parent_Parents_ApplyForChildIn_School", Storage="_Parent1", ThisKey="parent", OtherKey="username", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Parent Parent1
		{
			get
			{
				return this._Parent1.Entity;
			}
			set
			{
				Parent previousValue = this._Parent1.Entity;
				if (((previousValue != value) 
							|| (this._Parent1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Parent1.Entity = null;
						previousValue.Parents_ApplyForChildIn_Schools.Remove(this);
					}
					this._Parent1.Entity = value;
					if ((value != null))
					{
						value.Parents_ApplyForChildIn_Schools.Add(this);
						this._parent = value.username;
					}
					else
					{
						this._parent = default(string);
					}
					this.SendPropertyChanged("Parent1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_Parents_ApplyForChildIn_School", Storage="_School1", ThisKey="school", OtherKey="primary_key", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public School School1
		{
			get
			{
				return this._School1.Entity;
			}
			set
			{
				School previousValue = this._School1.Entity;
				if (((previousValue != value) 
							|| (this._School1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._School1.Entity = null;
						previousValue.Parents_ApplyForChildIn_Schools.Remove(this);
					}
					this._School1.Entity = value;
					if ((value != null))
					{
						value.Parents_ApplyForChildIn_Schools.Add(this);
						this._school = value.primary_key;
					}
					else
					{
						this._school = default(int);
					}
					this.SendPropertyChanged("School1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Parents_Mobiles")]
	public partial class Parents_Mobile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _number;
		
		private string _username;
		
		private EntityRef<Parent> _Parent;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnnumberChanging(int value);
    partial void OnnumberChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    #endregion
		
		public Parents_Mobile()
		{
			this._Parent = default(EntityRef<Parent>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_number", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int number
		{
			get
			{
				return this._number;
			}
			set
			{
				if ((this._number != value))
				{
					this.OnnumberChanging(value);
					this.SendPropertyChanging();
					this._number = value;
					this.SendPropertyChanged("number");
					this.OnnumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					if (this._Parent.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Parent_Parents_Mobile", Storage="_Parent", ThisKey="username", OtherKey="username", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Parent Parent
		{
			get
			{
				return this._Parent.Entity;
			}
			set
			{
				Parent previousValue = this._Parent.Entity;
				if (((previousValue != value) 
							|| (this._Parent.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Parent.Entity = null;
						previousValue.Parents_Mobiles.Remove(this);
					}
					this._Parent.Entity = value;
					if ((value != null))
					{
						value.Parents_Mobiles.Add(this);
						this._username = value.username;
					}
					else
					{
						this._username = default(string);
					}
					this.SendPropertyChanged("Parent");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Parents_Review_Schools")]
	public partial class Parents_Review_School : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _parent;
		
		private int _school;
		
		private string _review;
		
		private EntityRef<Parent> _Parent1;
		
		private EntityRef<School> _School1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnparentChanging(string value);
    partial void OnparentChanged();
    partial void OnschoolChanging(int value);
    partial void OnschoolChanged();
    partial void OnreviewChanging(string value);
    partial void OnreviewChanged();
    #endregion
		
		public Parents_Review_School()
		{
			this._Parent1 = default(EntityRef<Parent>);
			this._School1 = default(EntityRef<School>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_parent", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string parent
		{
			get
			{
				return this._parent;
			}
			set
			{
				if ((this._parent != value))
				{
					if (this._Parent1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnparentChanging(value);
					this.SendPropertyChanging();
					this._parent = value;
					this.SendPropertyChanged("parent");
					this.OnparentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_school", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int school
		{
			get
			{
				return this._school;
			}
			set
			{
				if ((this._school != value))
				{
					if (this._School1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnschoolChanging(value);
					this.SendPropertyChanging();
					this._school = value;
					this.SendPropertyChanged("school");
					this.OnschoolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_review", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string review
		{
			get
			{
				return this._review;
			}
			set
			{
				if ((this._review != value))
				{
					this.OnreviewChanging(value);
					this.SendPropertyChanging();
					this._review = value;
					this.SendPropertyChanged("review");
					this.OnreviewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Parent_Parents_Review_School", Storage="_Parent1", ThisKey="parent", OtherKey="username", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Parent Parent1
		{
			get
			{
				return this._Parent1.Entity;
			}
			set
			{
				Parent previousValue = this._Parent1.Entity;
				if (((previousValue != value) 
							|| (this._Parent1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Parent1.Entity = null;
						previousValue.Parents_Review_Schools.Remove(this);
					}
					this._Parent1.Entity = value;
					if ((value != null))
					{
						value.Parents_Review_Schools.Add(this);
						this._parent = value.username;
					}
					else
					{
						this._parent = default(string);
					}
					this.SendPropertyChanged("Parent1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_Parents_Review_School", Storage="_School1", ThisKey="school", OtherKey="primary_key", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public School School1
		{
			get
			{
				return this._School1.Entity;
			}
			set
			{
				School previousValue = this._School1.Entity;
				if (((previousValue != value) 
							|| (this._School1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._School1.Entity = null;
						previousValue.Parents_Review_Schools.Remove(this);
					}
					this._School1.Entity = value;
					if ((value != null))
					{
						value.Parents_Review_Schools.Add(this);
						this._school = value.primary_key;
					}
					else
					{
						this._school = default(int);
					}
					this.SendPropertyChanged("School1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Questions")]
	public partial class Question : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _primary_key;
		
		private string _content;
		
		private System.Nullable<System.DateTime> _question_date;
		
		private string _answer;
		
		private System.Nullable<int> _student;
		
		private string _course;
		
		private string _teacher;
		
		private EntityRef<Course> _Course1;
		
		private EntityRef<Student> _Student1;
		
		private EntityRef<Teacher> _Teacher1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onprimary_keyChanging(int value);
    partial void Onprimary_keyChanged();
    partial void OncontentChanging(string value);
    partial void OncontentChanged();
    partial void Onquestion_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onquestion_dateChanged();
    partial void OnanswerChanging(string value);
    partial void OnanswerChanged();
    partial void OnstudentChanging(System.Nullable<int> value);
    partial void OnstudentChanged();
    partial void OncourseChanging(string value);
    partial void OncourseChanged();
    partial void OnteacherChanging(string value);
    partial void OnteacherChanged();
    #endregion
		
		public Question()
		{
			this._Course1 = default(EntityRef<Course>);
			this._Student1 = default(EntityRef<Student>);
			this._Teacher1 = default(EntityRef<Teacher>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_primary_key", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int primary_key
		{
			get
			{
				return this._primary_key;
			}
			set
			{
				if ((this._primary_key != value))
				{
					this.Onprimary_keyChanging(value);
					this.SendPropertyChanging();
					this._primary_key = value;
					this.SendPropertyChanged("primary_key");
					this.Onprimary_keyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_content", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string content
		{
			get
			{
				return this._content;
			}
			set
			{
				if ((this._content != value))
				{
					this.OncontentChanging(value);
					this.SendPropertyChanging();
					this._content = value;
					this.SendPropertyChanged("content");
					this.OncontentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_question_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> question_date
		{
			get
			{
				return this._question_date;
			}
			set
			{
				if ((this._question_date != value))
				{
					this.Onquestion_dateChanging(value);
					this.SendPropertyChanging();
					this._question_date = value;
					this.SendPropertyChanged("question_date");
					this.Onquestion_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_answer", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string answer
		{
			get
			{
				return this._answer;
			}
			set
			{
				if ((this._answer != value))
				{
					this.OnanswerChanging(value);
					this.SendPropertyChanging();
					this._answer = value;
					this.SendPropertyChanged("answer");
					this.OnanswerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_student", DbType="Int")]
		public System.Nullable<int> student
		{
			get
			{
				return this._student;
			}
			set
			{
				if ((this._student != value))
				{
					if (this._Student1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnstudentChanging(value);
					this.SendPropertyChanging();
					this._student = value;
					this.SendPropertyChanged("student");
					this.OnstudentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_course", DbType="VarChar(50)")]
		public string course
		{
			get
			{
				return this._course;
			}
			set
			{
				if ((this._course != value))
				{
					if (this._Course1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncourseChanging(value);
					this.SendPropertyChanging();
					this._course = value;
					this.SendPropertyChanged("course");
					this.OncourseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_teacher", DbType="VarChar(50)")]
		public string teacher
		{
			get
			{
				return this._teacher;
			}
			set
			{
				if ((this._teacher != value))
				{
					if (this._Teacher1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnteacherChanging(value);
					this.SendPropertyChanging();
					this._teacher = value;
					this.SendPropertyChanged("teacher");
					this.OnteacherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Course_Question", Storage="_Course1", ThisKey="course", OtherKey="code", IsForeignKey=true, DeleteRule="SET NULL")]
		public Course Course1
		{
			get
			{
				return this._Course1.Entity;
			}
			set
			{
				Course previousValue = this._Course1.Entity;
				if (((previousValue != value) 
							|| (this._Course1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Course1.Entity = null;
						previousValue.Questions.Remove(this);
					}
					this._Course1.Entity = value;
					if ((value != null))
					{
						value.Questions.Add(this);
						this._course = value.code;
					}
					else
					{
						this._course = default(string);
					}
					this.SendPropertyChanged("Course1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_Question", Storage="_Student1", ThisKey="student", OtherKey="ssn", IsForeignKey=true, DeleteRule="SET NULL")]
		public Student Student1
		{
			get
			{
				return this._Student1.Entity;
			}
			set
			{
				Student previousValue = this._Student1.Entity;
				if (((previousValue != value) 
							|| (this._Student1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Student1.Entity = null;
						previousValue.Questions.Remove(this);
					}
					this._Student1.Entity = value;
					if ((value != null))
					{
						value.Questions.Add(this);
						this._student = value.ssn;
					}
					else
					{
						this._student = default(Nullable<int>);
					}
					this.SendPropertyChanged("Student1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Teacher_Question", Storage="_Teacher1", ThisKey="teacher", OtherKey="username", IsForeignKey=true, DeleteRule="SET NULL")]
		public Teacher Teacher1
		{
			get
			{
				return this._Teacher1.Entity;
			}
			set
			{
				Teacher previousValue = this._Teacher1.Entity;
				if (((previousValue != value) 
							|| (this._Teacher1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Teacher1.Entity = null;
						previousValue.Questions.Remove(this);
					}
					this._Teacher1.Entity = value;
					if ((value != null))
					{
						value.Questions.Add(this);
						this._teacher = value.username;
					}
					else
					{
						this._teacher = default(string);
					}
					this.SendPropertyChanged("Teacher1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Schools")]
	public partial class School : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _primary_key;
		
		private int _phone_number;
		
		private string _general_info;
		
		private string _mail;
		
		private string _vision;
		
		private string _mission;
		
		private string _main_language;
		
		private decimal _fees;
		
		private string _name;
		
		private string _address;
		
		private string _type;
		
		private EntityRef<Elementary> _Elementary;
		
		private EntitySet<Employee> _Employees;
		
		private EntityRef<High> _High;
		
		private EntityRef<Middle> _Middle;
		
		private EntitySet<Parents_ApplyForChildIn_School> _Parents_ApplyForChildIn_Schools;
		
		private EntitySet<Parents_Review_School> _Parents_Review_Schools;
		
		private EntitySet<Student> _Students;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onprimary_keyChanging(int value);
    partial void Onprimary_keyChanged();
    partial void Onphone_numberChanging(int value);
    partial void Onphone_numberChanged();
    partial void Ongeneral_infoChanging(string value);
    partial void Ongeneral_infoChanged();
    partial void OnmailChanging(string value);
    partial void OnmailChanged();
    partial void OnvisionChanging(string value);
    partial void OnvisionChanged();
    partial void OnmissionChanging(string value);
    partial void OnmissionChanged();
    partial void Onmain_languageChanging(string value);
    partial void Onmain_languageChanged();
    partial void OnfeesChanging(decimal value);
    partial void OnfeesChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OntypeChanging(string value);
    partial void OntypeChanged();
    #endregion
		
		public School()
		{
			this._Elementary = default(EntityRef<Elementary>);
			this._Employees = new EntitySet<Employee>(new Action<Employee>(this.attach_Employees), new Action<Employee>(this.detach_Employees));
			this._High = default(EntityRef<High>);
			this._Middle = default(EntityRef<Middle>);
			this._Parents_ApplyForChildIn_Schools = new EntitySet<Parents_ApplyForChildIn_School>(new Action<Parents_ApplyForChildIn_School>(this.attach_Parents_ApplyForChildIn_Schools), new Action<Parents_ApplyForChildIn_School>(this.detach_Parents_ApplyForChildIn_Schools));
			this._Parents_Review_Schools = new EntitySet<Parents_Review_School>(new Action<Parents_Review_School>(this.attach_Parents_Review_Schools), new Action<Parents_Review_School>(this.detach_Parents_Review_Schools));
			this._Students = new EntitySet<Student>(new Action<Student>(this.attach_Students), new Action<Student>(this.detach_Students));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_primary_key", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int primary_key
		{
			get
			{
				return this._primary_key;
			}
			set
			{
				if ((this._primary_key != value))
				{
					this.Onprimary_keyChanging(value);
					this.SendPropertyChanging();
					this._primary_key = value;
					this.SendPropertyChanged("primary_key");
					this.Onprimary_keyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone_number", DbType="Int NOT NULL")]
		public int phone_number
		{
			get
			{
				return this._phone_number;
			}
			set
			{
				if ((this._phone_number != value))
				{
					this.Onphone_numberChanging(value);
					this.SendPropertyChanging();
					this._phone_number = value;
					this.SendPropertyChanged("phone_number");
					this.Onphone_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_general_info", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string general_info
		{
			get
			{
				return this._general_info;
			}
			set
			{
				if ((this._general_info != value))
				{
					this.Ongeneral_infoChanging(value);
					this.SendPropertyChanging();
					this._general_info = value;
					this.SendPropertyChanged("general_info");
					this.Ongeneral_infoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mail", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string mail
		{
			get
			{
				return this._mail;
			}
			set
			{
				if ((this._mail != value))
				{
					this.OnmailChanging(value);
					this.SendPropertyChanging();
					this._mail = value;
					this.SendPropertyChanged("mail");
					this.OnmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vision", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string vision
		{
			get
			{
				return this._vision;
			}
			set
			{
				if ((this._vision != value))
				{
					this.OnvisionChanging(value);
					this.SendPropertyChanging();
					this._vision = value;
					this.SendPropertyChanged("vision");
					this.OnvisionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mission", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string mission
		{
			get
			{
				return this._mission;
			}
			set
			{
				if ((this._mission != value))
				{
					this.OnmissionChanging(value);
					this.SendPropertyChanging();
					this._mission = value;
					this.SendPropertyChanged("mission");
					this.OnmissionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_main_language", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string main_language
		{
			get
			{
				return this._main_language;
			}
			set
			{
				if ((this._main_language != value))
				{
					this.Onmain_languageChanging(value);
					this.SendPropertyChanging();
					this._main_language = value;
					this.SendPropertyChanged("main_language");
					this.Onmain_languageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fees", DbType="Decimal(18,0) NOT NULL")]
		public decimal fees
		{
			get
			{
				return this._fees;
			}
			set
			{
				if ((this._fees != value))
				{
					this.OnfeesChanging(value);
					this.SendPropertyChanging();
					this._fees = value;
					this.SendPropertyChanged("fees");
					this.OnfeesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_Elementary", Storage="_Elementary", ThisKey="primary_key", OtherKey="school", IsUnique=true, IsForeignKey=false)]
		public Elementary Elementary
		{
			get
			{
				return this._Elementary.Entity;
			}
			set
			{
				Elementary previousValue = this._Elementary.Entity;
				if (((previousValue != value) 
							|| (this._Elementary.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Elementary.Entity = null;
						previousValue.School1 = null;
					}
					this._Elementary.Entity = value;
					if ((value != null))
					{
						value.School1 = this;
					}
					this.SendPropertyChanged("Elementary");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_Employee", Storage="_Employees", ThisKey="primary_key", OtherKey="school")]
		public EntitySet<Employee> Employees
		{
			get
			{
				return this._Employees;
			}
			set
			{
				this._Employees.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_High", Storage="_High", ThisKey="primary_key", OtherKey="school", IsUnique=true, IsForeignKey=false)]
		public High High
		{
			get
			{
				return this._High.Entity;
			}
			set
			{
				High previousValue = this._High.Entity;
				if (((previousValue != value) 
							|| (this._High.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._High.Entity = null;
						previousValue.School1 = null;
					}
					this._High.Entity = value;
					if ((value != null))
					{
						value.School1 = this;
					}
					this.SendPropertyChanged("High");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_Middle", Storage="_Middle", ThisKey="primary_key", OtherKey="school", IsUnique=true, IsForeignKey=false)]
		public Middle Middle
		{
			get
			{
				return this._Middle.Entity;
			}
			set
			{
				Middle previousValue = this._Middle.Entity;
				if (((previousValue != value) 
							|| (this._Middle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Middle.Entity = null;
						previousValue.School1 = null;
					}
					this._Middle.Entity = value;
					if ((value != null))
					{
						value.School1 = this;
					}
					this.SendPropertyChanged("Middle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_Parents_ApplyForChildIn_School", Storage="_Parents_ApplyForChildIn_Schools", ThisKey="primary_key", OtherKey="school")]
		public EntitySet<Parents_ApplyForChildIn_School> Parents_ApplyForChildIn_Schools
		{
			get
			{
				return this._Parents_ApplyForChildIn_Schools;
			}
			set
			{
				this._Parents_ApplyForChildIn_Schools.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_Parents_Review_School", Storage="_Parents_Review_Schools", ThisKey="primary_key", OtherKey="school")]
		public EntitySet<Parents_Review_School> Parents_Review_Schools
		{
			get
			{
				return this._Parents_Review_Schools;
			}
			set
			{
				this._Parents_Review_Schools.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_Student", Storage="_Students", ThisKey="primary_key", OtherKey="school")]
		public EntitySet<Student> Students
		{
			get
			{
				return this._Students;
			}
			set
			{
				this._Students.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.School1 = this;
		}
		
		private void detach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.School1 = null;
		}
		
		private void attach_Parents_ApplyForChildIn_Schools(Parents_ApplyForChildIn_School entity)
		{
			this.SendPropertyChanging();
			entity.School1 = this;
		}
		
		private void detach_Parents_ApplyForChildIn_Schools(Parents_ApplyForChildIn_School entity)
		{
			this.SendPropertyChanging();
			entity.School1 = null;
		}
		
		private void attach_Parents_Review_Schools(Parents_Review_School entity)
		{
			this.SendPropertyChanging();
			entity.School1 = this;
		}
		
		private void detach_Parents_Review_Schools(Parents_Review_School entity)
		{
			this.SendPropertyChanging();
			entity.School1 = null;
		}
		
		private void attach_Students(Student entity)
		{
			this.SendPropertyChanging();
			entity.School1 = this;
		}
		
		private void detach_Students(Student entity)
		{
			this.SendPropertyChanging();
			entity.School1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Students")]
	public partial class Student : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ssn;
		
		private string _username;
		
		private string _password;
		
		private int _grade;
		
		private int _level;
		
		private System.Nullable<int> _school;
		
		private int _id;
		
		private EntitySet<Question> _Questions;
		
		private EntitySet<Students_Join_Club> _Students_Join_Clubs;
		
		private EntitySet<Students_ParticipateIn_Activity> _Students_ParticipateIn_Activities;
		
		private EntitySet<Students_Submits_Assignments_In_Course> _Students_Submits_Assignments_In_Courses;
		
		private EntitySet<Teachers_teaches_Courses_to_Student> _Teachers_teaches_Courses_to_Students;
		
		private EntityRef<School> _School1;
		
		private EntityRef<Children> _Children;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnssnChanging(int value);
    partial void OnssnChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OngradeChanging(int value);
    partial void OngradeChanged();
    partial void OnlevelChanging(int value);
    partial void OnlevelChanged();
    partial void OnschoolChanging(System.Nullable<int> value);
    partial void OnschoolChanged();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    #endregion
		
		public Student()
		{
			this._Questions = new EntitySet<Question>(new Action<Question>(this.attach_Questions), new Action<Question>(this.detach_Questions));
			this._Students_Join_Clubs = new EntitySet<Students_Join_Club>(new Action<Students_Join_Club>(this.attach_Students_Join_Clubs), new Action<Students_Join_Club>(this.detach_Students_Join_Clubs));
			this._Students_ParticipateIn_Activities = new EntitySet<Students_ParticipateIn_Activity>(new Action<Students_ParticipateIn_Activity>(this.attach_Students_ParticipateIn_Activities), new Action<Students_ParticipateIn_Activity>(this.detach_Students_ParticipateIn_Activities));
			this._Students_Submits_Assignments_In_Courses = new EntitySet<Students_Submits_Assignments_In_Course>(new Action<Students_Submits_Assignments_In_Course>(this.attach_Students_Submits_Assignments_In_Courses), new Action<Students_Submits_Assignments_In_Course>(this.detach_Students_Submits_Assignments_In_Courses));
			this._Teachers_teaches_Courses_to_Students = new EntitySet<Teachers_teaches_Courses_to_Student>(new Action<Teachers_teaches_Courses_to_Student>(this.attach_Teachers_teaches_Courses_to_Students), new Action<Teachers_teaches_Courses_to_Student>(this.detach_Teachers_teaches_Courses_to_Students));
			this._School1 = default(EntityRef<School>);
			this._Children = default(EntityRef<Children>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ssn", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ssn
		{
			get
			{
				return this._ssn;
			}
			set
			{
				if ((this._ssn != value))
				{
					if (this._Children.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnssnChanging(value);
					this.SendPropertyChanging();
					this._ssn = value;
					this.SendPropertyChanged("ssn");
					this.OnssnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(150)")]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(150)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_grade", DbType="Int NOT NULL")]
		public int grade
		{
			get
			{
				return this._grade;
			}
			set
			{
				if ((this._grade != value))
				{
					this.OngradeChanging(value);
					this.SendPropertyChanging();
					this._grade = value;
					this.SendPropertyChanged("grade");
					this.OngradeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[level]", Storage="_level", DbType="Int NOT NULL")]
		public int level
		{
			get
			{
				return this._level;
			}
			set
			{
				if ((this._level != value))
				{
					this.OnlevelChanging(value);
					this.SendPropertyChanging();
					this._level = value;
					this.SendPropertyChanged("level");
					this.OnlevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_school", DbType="Int")]
		public System.Nullable<int> school
		{
			get
			{
				return this._school;
			}
			set
			{
				if ((this._school != value))
				{
					if (this._School1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnschoolChanging(value);
					this.SendPropertyChanging();
					this._school = value;
					this.SendPropertyChanged("school");
					this.OnschoolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_Question", Storage="_Questions", ThisKey="ssn", OtherKey="student")]
		public EntitySet<Question> Questions
		{
			get
			{
				return this._Questions;
			}
			set
			{
				this._Questions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_Students_Join_Club", Storage="_Students_Join_Clubs", ThisKey="ssn", OtherKey="student")]
		public EntitySet<Students_Join_Club> Students_Join_Clubs
		{
			get
			{
				return this._Students_Join_Clubs;
			}
			set
			{
				this._Students_Join_Clubs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_Students_ParticipateIn_Activity", Storage="_Students_ParticipateIn_Activities", ThisKey="ssn", OtherKey="student")]
		public EntitySet<Students_ParticipateIn_Activity> Students_ParticipateIn_Activities
		{
			get
			{
				return this._Students_ParticipateIn_Activities;
			}
			set
			{
				this._Students_ParticipateIn_Activities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_Students_Submits_Assignments_In_Course", Storage="_Students_Submits_Assignments_In_Courses", ThisKey="ssn", OtherKey="student")]
		public EntitySet<Students_Submits_Assignments_In_Course> Students_Submits_Assignments_In_Courses
		{
			get
			{
				return this._Students_Submits_Assignments_In_Courses;
			}
			set
			{
				this._Students_Submits_Assignments_In_Courses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_Teachers_teaches_Courses_to_Student", Storage="_Teachers_teaches_Courses_to_Students", ThisKey="ssn", OtherKey="student")]
		public EntitySet<Teachers_teaches_Courses_to_Student> Teachers_teaches_Courses_to_Students
		{
			get
			{
				return this._Teachers_teaches_Courses_to_Students;
			}
			set
			{
				this._Teachers_teaches_Courses_to_Students.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_Student", Storage="_School1", ThisKey="school", OtherKey="primary_key", IsForeignKey=true, DeleteRule="SET NULL")]
		public School School1
		{
			get
			{
				return this._School1.Entity;
			}
			set
			{
				School previousValue = this._School1.Entity;
				if (((previousValue != value) 
							|| (this._School1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._School1.Entity = null;
						previousValue.Students.Remove(this);
					}
					this._School1.Entity = value;
					if ((value != null))
					{
						value.Students.Add(this);
						this._school = value.primary_key;
					}
					else
					{
						this._school = default(Nullable<int>);
					}
					this.SendPropertyChanged("School1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Children_Student", Storage="_Children", ThisKey="ssn", OtherKey="ssn", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Children Children
		{
			get
			{
				return this._Children.Entity;
			}
			set
			{
				Children previousValue = this._Children.Entity;
				if (((previousValue != value) 
							|| (this._Children.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Children.Entity = null;
						previousValue.Student = null;
					}
					this._Children.Entity = value;
					if ((value != null))
					{
						value.Student = this;
						this._ssn = value.ssn;
					}
					else
					{
						this._ssn = default(int);
					}
					this.SendPropertyChanged("Children");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Questions(Question entity)
		{
			this.SendPropertyChanging();
			entity.Student1 = this;
		}
		
		private void detach_Questions(Question entity)
		{
			this.SendPropertyChanging();
			entity.Student1 = null;
		}
		
		private void attach_Students_Join_Clubs(Students_Join_Club entity)
		{
			this.SendPropertyChanging();
			entity.Student1 = this;
		}
		
		private void detach_Students_Join_Clubs(Students_Join_Club entity)
		{
			this.SendPropertyChanging();
			entity.Student1 = null;
		}
		
		private void attach_Students_ParticipateIn_Activities(Students_ParticipateIn_Activity entity)
		{
			this.SendPropertyChanging();
			entity.Student1 = this;
		}
		
		private void detach_Students_ParticipateIn_Activities(Students_ParticipateIn_Activity entity)
		{
			this.SendPropertyChanging();
			entity.Student1 = null;
		}
		
		private void attach_Students_Submits_Assignments_In_Courses(Students_Submits_Assignments_In_Course entity)
		{
			this.SendPropertyChanging();
			entity.Student1 = this;
		}
		
		private void detach_Students_Submits_Assignments_In_Courses(Students_Submits_Assignments_In_Course entity)
		{
			this.SendPropertyChanging();
			entity.Student1 = null;
		}
		
		private void attach_Teachers_teaches_Courses_to_Students(Teachers_teaches_Courses_to_Student entity)
		{
			this.SendPropertyChanging();
			entity.Student1 = this;
		}
		
		private void detach_Teachers_teaches_Courses_to_Students(Teachers_teaches_Courses_to_Student entity)
		{
			this.SendPropertyChanging();
			entity.Student1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Students_Join_Clubs")]
	public partial class Students_Join_Club : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _student;
		
		private int _club;
		
		private EntityRef<Student> _Student1;
		
		private EntityRef<Club> _Club1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnstudentChanging(int value);
    partial void OnstudentChanged();
    partial void OnclubChanging(int value);
    partial void OnclubChanged();
    #endregion
		
		public Students_Join_Club()
		{
			this._Student1 = default(EntityRef<Student>);
			this._Club1 = default(EntityRef<Club>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_student", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int student
		{
			get
			{
				return this._student;
			}
			set
			{
				if ((this._student != value))
				{
					if (this._Student1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnstudentChanging(value);
					this.SendPropertyChanging();
					this._student = value;
					this.SendPropertyChanged("student");
					this.OnstudentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_club", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int club
		{
			get
			{
				return this._club;
			}
			set
			{
				if ((this._club != value))
				{
					if (this._Club1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnclubChanging(value);
					this.SendPropertyChanging();
					this._club = value;
					this.SendPropertyChanged("club");
					this.OnclubChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_Students_Join_Club", Storage="_Student1", ThisKey="student", OtherKey="ssn", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Student Student1
		{
			get
			{
				return this._Student1.Entity;
			}
			set
			{
				Student previousValue = this._Student1.Entity;
				if (((previousValue != value) 
							|| (this._Student1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Student1.Entity = null;
						previousValue.Students_Join_Clubs.Remove(this);
					}
					this._Student1.Entity = value;
					if ((value != null))
					{
						value.Students_Join_Clubs.Add(this);
						this._student = value.ssn;
					}
					else
					{
						this._student = default(int);
					}
					this.SendPropertyChanged("Student1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Club_Students_Join_Club", Storage="_Club1", ThisKey="club", OtherKey="club_id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Club Club1
		{
			get
			{
				return this._Club1.Entity;
			}
			set
			{
				Club previousValue = this._Club1.Entity;
				if (((previousValue != value) 
							|| (this._Club1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Club1.Entity = null;
						previousValue.Students_Join_Clubs.Remove(this);
					}
					this._Club1.Entity = value;
					if ((value != null))
					{
						value.Students_Join_Clubs.Add(this);
						this._club = value.club_id;
					}
					else
					{
						this._club = default(int);
					}
					this.SendPropertyChanged("Club1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Students_ParticipateIn_Activity")]
	public partial class Students_ParticipateIn_Activity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _activity;
		
		private int _student;
		
		private EntityRef<Activity> _Activity1;
		
		private EntityRef<Student> _Student1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnactivityChanging(int value);
    partial void OnactivityChanged();
    partial void OnstudentChanging(int value);
    partial void OnstudentChanged();
    #endregion
		
		public Students_ParticipateIn_Activity()
		{
			this._Activity1 = default(EntityRef<Activity>);
			this._Student1 = default(EntityRef<Student>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_activity", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int activity
		{
			get
			{
				return this._activity;
			}
			set
			{
				if ((this._activity != value))
				{
					if (this._Activity1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnactivityChanging(value);
					this.SendPropertyChanging();
					this._activity = value;
					this.SendPropertyChanged("activity");
					this.OnactivityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_student", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int student
		{
			get
			{
				return this._student;
			}
			set
			{
				if ((this._student != value))
				{
					if (this._Student1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnstudentChanging(value);
					this.SendPropertyChanging();
					this._student = value;
					this.SendPropertyChanged("student");
					this.OnstudentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Activity_Students_ParticipateIn_Activity", Storage="_Activity1", ThisKey="activity", OtherKey="primary_key", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Activity Activity1
		{
			get
			{
				return this._Activity1.Entity;
			}
			set
			{
				Activity previousValue = this._Activity1.Entity;
				if (((previousValue != value) 
							|| (this._Activity1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Activity1.Entity = null;
						previousValue.Students_ParticipateIn_Activities.Remove(this);
					}
					this._Activity1.Entity = value;
					if ((value != null))
					{
						value.Students_ParticipateIn_Activities.Add(this);
						this._activity = value.primary_key;
					}
					else
					{
						this._activity = default(int);
					}
					this.SendPropertyChanged("Activity1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_Students_ParticipateIn_Activity", Storage="_Student1", ThisKey="student", OtherKey="ssn", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Student Student1
		{
			get
			{
				return this._Student1.Entity;
			}
			set
			{
				Student previousValue = this._Student1.Entity;
				if (((previousValue != value) 
							|| (this._Student1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Student1.Entity = null;
						previousValue.Students_ParticipateIn_Activities.Remove(this);
					}
					this._Student1.Entity = value;
					if ((value != null))
					{
						value.Students_ParticipateIn_Activities.Add(this);
						this._student = value.ssn;
					}
					else
					{
						this._student = default(int);
					}
					this.SendPropertyChanged("Student1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Students_Submits_Assignments_In_Courses")]
	public partial class Students_Submits_Assignments_In_Course : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _student;
		
		private System.DateTime _post_date;
		
		private System.DateTime _due_date;
		
		private string _course;
		
		private string _solution;
		
		private System.Nullable<decimal> _grade;
		
		private EntityRef<Student> _Student1;
		
		private EntityRef<Assignment> _Assignment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnstudentChanging(int value);
    partial void OnstudentChanged();
    partial void Onpost_dateChanging(System.DateTime value);
    partial void Onpost_dateChanged();
    partial void Ondue_dateChanging(System.DateTime value);
    partial void Ondue_dateChanged();
    partial void OncourseChanging(string value);
    partial void OncourseChanged();
    partial void OnsolutionChanging(string value);
    partial void OnsolutionChanged();
    partial void OngradeChanging(System.Nullable<decimal> value);
    partial void OngradeChanged();
    #endregion
		
		public Students_Submits_Assignments_In_Course()
		{
			this._Student1 = default(EntityRef<Student>);
			this._Assignment = default(EntityRef<Assignment>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_student", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int student
		{
			get
			{
				return this._student;
			}
			set
			{
				if ((this._student != value))
				{
					if (this._Student1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnstudentChanging(value);
					this.SendPropertyChanging();
					this._student = value;
					this.SendPropertyChanged("student");
					this.OnstudentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_post_date", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime post_date
		{
			get
			{
				return this._post_date;
			}
			set
			{
				if ((this._post_date != value))
				{
					if (this._Assignment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpost_dateChanging(value);
					this.SendPropertyChanging();
					this._post_date = value;
					this.SendPropertyChanged("post_date");
					this.Onpost_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_due_date", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime due_date
		{
			get
			{
				return this._due_date;
			}
			set
			{
				if ((this._due_date != value))
				{
					if (this._Assignment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ondue_dateChanging(value);
					this.SendPropertyChanging();
					this._due_date = value;
					this.SendPropertyChanged("due_date");
					this.Ondue_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_course", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string course
		{
			get
			{
				return this._course;
			}
			set
			{
				if ((this._course != value))
				{
					if (this._Assignment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncourseChanging(value);
					this.SendPropertyChanging();
					this._course = value;
					this.SendPropertyChanged("course");
					this.OncourseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_solution", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string solution
		{
			get
			{
				return this._solution;
			}
			set
			{
				if ((this._solution != value))
				{
					this.OnsolutionChanging(value);
					this.SendPropertyChanging();
					this._solution = value;
					this.SendPropertyChanged("solution");
					this.OnsolutionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_grade", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> grade
		{
			get
			{
				return this._grade;
			}
			set
			{
				if ((this._grade != value))
				{
					this.OngradeChanging(value);
					this.SendPropertyChanging();
					this._grade = value;
					this.SendPropertyChanged("grade");
					this.OngradeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_Students_Submits_Assignments_In_Course", Storage="_Student1", ThisKey="student", OtherKey="ssn", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Student Student1
		{
			get
			{
				return this._Student1.Entity;
			}
			set
			{
				Student previousValue = this._Student1.Entity;
				if (((previousValue != value) 
							|| (this._Student1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Student1.Entity = null;
						previousValue.Students_Submits_Assignments_In_Courses.Remove(this);
					}
					this._Student1.Entity = value;
					if ((value != null))
					{
						value.Students_Submits_Assignments_In_Courses.Add(this);
						this._student = value.ssn;
					}
					else
					{
						this._student = default(int);
					}
					this.SendPropertyChanged("Student1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Assignment_Students_Submits_Assignments_In_Course", Storage="_Assignment", ThisKey="post_date,due_date,course", OtherKey="posting_date,due_date,code", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Assignment Assignment
		{
			get
			{
				return this._Assignment.Entity;
			}
			set
			{
				Assignment previousValue = this._Assignment.Entity;
				if (((previousValue != value) 
							|| (this._Assignment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Assignment.Entity = null;
						previousValue.Students_Submits_Assignments_In_Courses.Remove(this);
					}
					this._Assignment.Entity = value;
					if ((value != null))
					{
						value.Students_Submits_Assignments_In_Courses.Add(this);
						this._post_date = value.posting_date;
						this._due_date = value.due_date;
						this._course = value.code;
					}
					else
					{
						this._post_date = default(System.DateTime);
						this._due_date = default(System.DateTime);
						this._course = default(string);
					}
					this.SendPropertyChanged("Assignment");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Teachers")]
	public partial class Teacher : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _username;
		
		private System.DateTime _year_of_enrollment;
		
		private System.Nullable<int> _years_of_experience;
		
		private System.Nullable<bool> _supervisor;
		
		private EntitySet<Administrators_Assign_Activity> _Administrators_Assign_Activities;
		
		private EntitySet<Assignment> _Assignments;
		
		private EntitySet<Question> _Questions;
		
		private EntitySet<Teachers_teaches_Courses_to_Student> _Teachers_teaches_Courses_to_Students;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<Employee> _Employee1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void Onyear_of_enrollmentChanging(System.DateTime value);
    partial void Onyear_of_enrollmentChanged();
    partial void Onyears_of_experienceChanging(System.Nullable<int> value);
    partial void Onyears_of_experienceChanged();
    partial void OnsupervisorChanging(System.Nullable<bool> value);
    partial void OnsupervisorChanged();
    #endregion
		
		public Teacher()
		{
			this._Administrators_Assign_Activities = new EntitySet<Administrators_Assign_Activity>(new Action<Administrators_Assign_Activity>(this.attach_Administrators_Assign_Activities), new Action<Administrators_Assign_Activity>(this.detach_Administrators_Assign_Activities));
			this._Assignments = new EntitySet<Assignment>(new Action<Assignment>(this.attach_Assignments), new Action<Assignment>(this.detach_Assignments));
			this._Questions = new EntitySet<Question>(new Action<Question>(this.attach_Questions), new Action<Question>(this.detach_Questions));
			this._Teachers_teaches_Courses_to_Students = new EntitySet<Teachers_teaches_Courses_to_Student>(new Action<Teachers_teaches_Courses_to_Student>(this.attach_Teachers_teaches_Courses_to_Students), new Action<Teachers_teaches_Courses_to_Student>(this.detach_Teachers_teaches_Courses_to_Students));
			this._Employee = default(EntityRef<Employee>);
			this._Employee1 = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(50)")]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					if (this._Employee1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_year_of_enrollment", DbType="DateTime NOT NULL")]
		public System.DateTime year_of_enrollment
		{
			get
			{
				return this._year_of_enrollment;
			}
			set
			{
				if ((this._year_of_enrollment != value))
				{
					this.Onyear_of_enrollmentChanging(value);
					this.SendPropertyChanging();
					this._year_of_enrollment = value;
					this.SendPropertyChanged("year_of_enrollment");
					this.Onyear_of_enrollmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_years_of_experience", AutoSync=AutoSync.Always, DbType="Int", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> years_of_experience
		{
			get
			{
				return this._years_of_experience;
			}
			set
			{
				if ((this._years_of_experience != value))
				{
					this.Onyears_of_experienceChanging(value);
					this.SendPropertyChanging();
					this._years_of_experience = value;
					this.SendPropertyChanged("years_of_experience");
					this.Onyears_of_experienceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_supervisor", AutoSync=AutoSync.Always, DbType="Bit", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> supervisor
		{
			get
			{
				return this._supervisor;
			}
			set
			{
				if ((this._supervisor != value))
				{
					this.OnsupervisorChanging(value);
					this.SendPropertyChanging();
					this._supervisor = value;
					this.SendPropertyChanged("supervisor");
					this.OnsupervisorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Teacher_Administrators_Assign_Activity", Storage="_Administrators_Assign_Activities", ThisKey="username", OtherKey="teacher")]
		public EntitySet<Administrators_Assign_Activity> Administrators_Assign_Activities
		{
			get
			{
				return this._Administrators_Assign_Activities;
			}
			set
			{
				this._Administrators_Assign_Activities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Teacher_Assignment", Storage="_Assignments", ThisKey="username", OtherKey="teacher")]
		public EntitySet<Assignment> Assignments
		{
			get
			{
				return this._Assignments;
			}
			set
			{
				this._Assignments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Teacher_Question", Storage="_Questions", ThisKey="username", OtherKey="teacher")]
		public EntitySet<Question> Questions
		{
			get
			{
				return this._Questions;
			}
			set
			{
				this._Questions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Teacher_Teachers_teaches_Courses_to_Student", Storage="_Teachers_teaches_Courses_to_Students", ThisKey="username", OtherKey="teacher")]
		public EntitySet<Teachers_teaches_Courses_to_Student> Teachers_teaches_Courses_to_Students
		{
			get
			{
				return this._Teachers_teaches_Courses_to_Students;
			}
			set
			{
				this._Teachers_teaches_Courses_to_Students.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Teacher", Storage="_Employee", ThisKey="id", OtherKey="id", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.Teacher = null;
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.Teacher = this;
						this._id = value.id;
					}
					else
					{
						this._id = default(int);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Teacher1", Storage="_Employee1", ThisKey="username", OtherKey="username", IsForeignKey=true, DeleteRule="CASCADE")]
		public Employee Employee1
		{
			get
			{
				return this._Employee1.Entity;
			}
			set
			{
				Employee previousValue = this._Employee1.Entity;
				if (((previousValue != value) 
							|| (this._Employee1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee1.Entity = null;
						previousValue.Teachers.Remove(this);
					}
					this._Employee1.Entity = value;
					if ((value != null))
					{
						value.Teachers.Add(this);
						this._username = value.username;
					}
					else
					{
						this._username = default(string);
					}
					this.SendPropertyChanged("Employee1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Administrators_Assign_Activities(Administrators_Assign_Activity entity)
		{
			this.SendPropertyChanging();
			entity.Teacher1 = this;
		}
		
		private void detach_Administrators_Assign_Activities(Administrators_Assign_Activity entity)
		{
			this.SendPropertyChanging();
			entity.Teacher1 = null;
		}
		
		private void attach_Assignments(Assignment entity)
		{
			this.SendPropertyChanging();
			entity.Teacher1 = this;
		}
		
		private void detach_Assignments(Assignment entity)
		{
			this.SendPropertyChanging();
			entity.Teacher1 = null;
		}
		
		private void attach_Questions(Question entity)
		{
			this.SendPropertyChanging();
			entity.Teacher1 = this;
		}
		
		private void detach_Questions(Question entity)
		{
			this.SendPropertyChanging();
			entity.Teacher1 = null;
		}
		
		private void attach_Teachers_teaches_Courses_to_Students(Teachers_teaches_Courses_to_Student entity)
		{
			this.SendPropertyChanging();
			entity.Teacher1 = this;
		}
		
		private void detach_Teachers_teaches_Courses_to_Students(Teachers_teaches_Courses_to_Student entity)
		{
			this.SendPropertyChanging();
			entity.Teacher1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Teachers_assigned_to_Courses")]
	public partial class Teachers_assigned_to_Course
	{
		
		private string _teacher;
		
		private string _course;
		
		public Teachers_assigned_to_Course()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_teacher", DbType="VarChar(50)")]
		public string teacher
		{
			get
			{
				return this._teacher;
			}
			set
			{
				if ((this._teacher != value))
				{
					this._teacher = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_course", DbType="VarChar(50)")]
		public string course
		{
			get
			{
				return this._course;
			}
			set
			{
				if ((this._course != value))
				{
					this._course = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Teachers_teaches_Courses_to_Students")]
	public partial class Teachers_teaches_Courses_to_Student : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _student;
		
		private string _course;
		
		private string _teacher;
		
		private EntityRef<Course> _Course1;
		
		private EntityRef<Student> _Student1;
		
		private EntityRef<Teacher> _Teacher1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnstudentChanging(int value);
    partial void OnstudentChanged();
    partial void OncourseChanging(string value);
    partial void OncourseChanged();
    partial void OnteacherChanging(string value);
    partial void OnteacherChanged();
    #endregion
		
		public Teachers_teaches_Courses_to_Student()
		{
			this._Course1 = default(EntityRef<Course>);
			this._Student1 = default(EntityRef<Student>);
			this._Teacher1 = default(EntityRef<Teacher>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_student", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int student
		{
			get
			{
				return this._student;
			}
			set
			{
				if ((this._student != value))
				{
					if (this._Student1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnstudentChanging(value);
					this.SendPropertyChanging();
					this._student = value;
					this.SendPropertyChanged("student");
					this.OnstudentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_course", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string course
		{
			get
			{
				return this._course;
			}
			set
			{
				if ((this._course != value))
				{
					if (this._Course1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncourseChanging(value);
					this.SendPropertyChanging();
					this._course = value;
					this.SendPropertyChanged("course");
					this.OncourseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_teacher", DbType="VarChar(50)")]
		public string teacher
		{
			get
			{
				return this._teacher;
			}
			set
			{
				if ((this._teacher != value))
				{
					if (this._Teacher1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnteacherChanging(value);
					this.SendPropertyChanging();
					this._teacher = value;
					this.SendPropertyChanged("teacher");
					this.OnteacherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Course_Teachers_teaches_Courses_to_Student", Storage="_Course1", ThisKey="course", OtherKey="code", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Course Course1
		{
			get
			{
				return this._Course1.Entity;
			}
			set
			{
				Course previousValue = this._Course1.Entity;
				if (((previousValue != value) 
							|| (this._Course1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Course1.Entity = null;
						previousValue.Teachers_teaches_Courses_to_Students.Remove(this);
					}
					this._Course1.Entity = value;
					if ((value != null))
					{
						value.Teachers_teaches_Courses_to_Students.Add(this);
						this._course = value.code;
					}
					else
					{
						this._course = default(string);
					}
					this.SendPropertyChanged("Course1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_Teachers_teaches_Courses_to_Student", Storage="_Student1", ThisKey="student", OtherKey="ssn", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Student Student1
		{
			get
			{
				return this._Student1.Entity;
			}
			set
			{
				Student previousValue = this._Student1.Entity;
				if (((previousValue != value) 
							|| (this._Student1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Student1.Entity = null;
						previousValue.Teachers_teaches_Courses_to_Students.Remove(this);
					}
					this._Student1.Entity = value;
					if ((value != null))
					{
						value.Teachers_teaches_Courses_to_Students.Add(this);
						this._student = value.ssn;
					}
					else
					{
						this._student = default(int);
					}
					this.SendPropertyChanged("Student1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Teacher_Teachers_teaches_Courses_to_Student", Storage="_Teacher1", ThisKey="teacher", OtherKey="username", IsForeignKey=true, DeleteRule="SET NULL")]
		public Teacher Teacher1
		{
			get
			{
				return this._Teacher1.Entity;
			}
			set
			{
				Teacher previousValue = this._Teacher1.Entity;
				if (((previousValue != value) 
							|| (this._Teacher1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Teacher1.Entity = null;
						previousValue.Teachers_teaches_Courses_to_Students.Remove(this);
					}
					this._Teacher1.Entity = value;
					if ((value != null))
					{
						value.Teachers_teaches_Courses_to_Students.Add(this);
						this._teacher = value.username;
					}
					else
					{
						this._teacher = default(string);
					}
					this.SendPropertyChanged("Teacher1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class questions_viewed_by_teacherResult
	{
		
		private string _content;
		
		private string _name;
		
		public questions_viewed_by_teacherResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_content", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string content
		{
			get
			{
				return this._content;
			}
			set
			{
				if ((this._content != value))
				{
					this._content = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this._name = value;
				}
			}
		}
	}
	
	public partial class students_seen_by_teacherResult
	{
		
		private string _name;
		
		private int _grade;
		
		public students_seen_by_teacherResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this._name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_grade", DbType="Int NOT NULL")]
		public int grade
		{
			get
			{
				return this._grade;
			}
			set
			{
				if ((this._grade != value))
				{
					this._grade = value;
				}
			}
		}
	}
	
	public partial class teacher_view_coursesResult
	{
		
		private string _name;
		
		private int _course_grade;
		
		private int _course_level;
		
		public teacher_view_coursesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this._name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_course_grade", DbType="Int NOT NULL")]
		public int course_grade
		{
			get
			{
				return this._course_grade;
			}
			set
			{
				if ((this._course_grade != value))
				{
					this._course_grade = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_course_level", DbType="Int NOT NULL")]
		public int course_level
		{
			get
			{
				return this._course_level;
			}
			set
			{
				if ((this._course_level != value))
				{
					this._course_level = value;
				}
			}
		}
	}
	
	public partial class teacher_view_soluions_for_AssignmentsResult
	{
		
		private string _solution;
		
		public teacher_view_soluions_for_AssignmentsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_solution", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string solution
		{
			get
			{
				return this._solution;
			}
			set
			{
				if ((this._solution != value))
				{
					this._solution = value;
				}
			}
		}
	}
	
	public partial class teacher_view_student_who_participates_maximum_clubsResult
	{
		
		private string _name;
		
		public teacher_view_student_who_participates_maximum_clubsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this._name = value;
				}
			}
		}
	}
	
	public partial class teacher_view_students_with_no_activityResult
	{
		
		private string _name;
		
		public teacher_view_students_with_no_activityResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this._name = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
